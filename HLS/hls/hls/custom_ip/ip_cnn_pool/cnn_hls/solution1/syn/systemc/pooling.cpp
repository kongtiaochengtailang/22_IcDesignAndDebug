// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pooling.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pooling::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pooling::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<130> pooling::ap_ST_fsm_state1 = "1";
const sc_lv<130> pooling::ap_ST_fsm_state2 = "10";
const sc_lv<130> pooling::ap_ST_fsm_state3 = "100";
const sc_lv<130> pooling::ap_ST_fsm_state4 = "1000";
const sc_lv<130> pooling::ap_ST_fsm_state5 = "10000";
const sc_lv<130> pooling::ap_ST_fsm_state6 = "100000";
const sc_lv<130> pooling::ap_ST_fsm_state7 = "1000000";
const sc_lv<130> pooling::ap_ST_fsm_state8 = "10000000";
const sc_lv<130> pooling::ap_ST_fsm_state9 = "100000000";
const sc_lv<130> pooling::ap_ST_fsm_state10 = "1000000000";
const sc_lv<130> pooling::ap_ST_fsm_state11 = "10000000000";
const sc_lv<130> pooling::ap_ST_fsm_state12 = "100000000000";
const sc_lv<130> pooling::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state73 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state74 = "10000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state75 = "100000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state76 = "1000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state77 = "10000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state78 = "100000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state79 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state80 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state81 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state82 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state83 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state84 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state85 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state86 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state87 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state88 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state89 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state90 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state91 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state92 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state93 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state94 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state95 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state96 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state97 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state98 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state99 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state100 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state101 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state102 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state103 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state104 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state105 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state106 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state107 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state108 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state109 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state110 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state111 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state112 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state113 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state114 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state115 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state116 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state117 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state118 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state119 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state120 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state121 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state122 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state123 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state124 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state125 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state126 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state127 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state128 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state129 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<130> pooling::ap_ST_fsm_state130 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> pooling::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> pooling::ap_const_lv32_3E = "111110";
const sc_lv<32> pooling::ap_const_lv32_30 = "110000";
const sc_lv<32> pooling::ap_const_lv32_37 = "110111";
const sc_lv<32> pooling::ap_const_lv32_45 = "1000101";
const sc_lv<1> pooling::ap_const_lv1_0 = "0";
const sc_lv<32> pooling::ap_const_lv32_7B = "1111011";
const sc_lv<32> pooling::ap_const_lv32_7C = "1111100";
const sc_lv<32> pooling::ap_const_lv32_81 = "10000001";
const int pooling::C_S_AXI_DATA_WIDTH = "100000";
const int pooling::C_M_AXI_GMEM_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int pooling::C_M_AXI_GMEM_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int pooling::C_M_AXI_GMEM_CACHE_VALUE = "11";
const int pooling::C_M_AXI_DATA_WIDTH = "100000";
const sc_lv<32> pooling::ap_const_lv32_F = "1111";
const sc_lv<32> pooling::ap_const_lv32_10 = "10000";
const sc_lv<32> pooling::ap_const_lv32_15 = "10101";
const sc_lv<32> pooling::ap_const_lv32_16 = "10110";
const sc_lv<1> pooling::ap_const_lv1_1 = "1";
const sc_lv<32> pooling::ap_const_lv32_17 = "10111";
const sc_lv<32> pooling::ap_const_lv32_2A = "101010";
const sc_lv<32> pooling::ap_const_lv32_2B = "101011";
const sc_lv<32> pooling::ap_const_lv32_2C = "101100";
const sc_lv<32> pooling::ap_const_lv32_2D = "101101";
const sc_lv<32> pooling::ap_const_lv32_2E = "101110";
const sc_lv<32> pooling::ap_const_lv32_2F = "101111";
const sc_lv<32> pooling::ap_const_lv32_3C = "111100";
const sc_lv<32> pooling::ap_const_lv32_46 = "1000110";
const sc_lv<32> pooling::ap_const_lv32_56 = "1010110";
const sc_lv<32> pooling::ap_const_lv32_79 = "1111001";
const sc_lv<32> pooling::ap_const_lv32_7A = "1111010";
const sc_lv<16> pooling::ap_const_lv16_0 = "0000000000000000";
const sc_lv<8> pooling::ap_const_lv8_0 = "00000000";
const sc_lv<32> pooling::ap_const_lv32_47 = "1000111";
const sc_lv<32> pooling::ap_const_lv32_44 = "1000100";
const sc_lv<32> pooling::ap_const_lv32_3D = "111101";
const sc_lv<32> pooling::ap_const_lv32_1 = "1";
const sc_lv<3> pooling::ap_const_lv3_0 = "000";
const sc_lv<2> pooling::ap_const_lv2_0 = "00";
const sc_lv<4> pooling::ap_const_lv4_0 = "0000";
const sc_lv<4> pooling::ap_const_lv4_F = "1111";
const sc_lv<32> pooling::ap_const_lv32_38 = "111000";
const sc_lv<32> pooling::ap_const_lv32_2 = "10";
const sc_lv<32> pooling::ap_const_lv32_1F = "11111";
const sc_lv<16> pooling::ap_const_lv16_1 = "1";
const sc_lv<32> pooling::ap_const_lv32_D51184E7 = "11010101000100011000010011100111";
const sc_lv<8> pooling::ap_const_lv8_1 = "1";
const sc_lv<32> pooling::ap_const_lv32_1E = "11110";
const sc_lv<8> pooling::ap_const_lv8_FF = "11111111";
const sc_lv<23> pooling::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<5> pooling::ap_const_lv5_2 = "10";
const bool pooling::ap_const_boolean_1 = true;

pooling::pooling(sc_module_name name) : sc_module(name), mVcdFile(0) {
    pooling_AXILiteS_s_axi_U = new pooling_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("pooling_AXILiteS_s_axi_U");
    pooling_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    pooling_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    pooling_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    pooling_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    pooling_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    pooling_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    pooling_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    pooling_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    pooling_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    pooling_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    pooling_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    pooling_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    pooling_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    pooling_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    pooling_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    pooling_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    pooling_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    pooling_AXILiteS_s_axi_U->ACLK(ap_clk);
    pooling_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    pooling_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    pooling_AXILiteS_s_axi_U->ap_start(ap_start);
    pooling_AXILiteS_s_axi_U->interrupt(interrupt);
    pooling_AXILiteS_s_axi_U->ap_ready(ap_ready);
    pooling_AXILiteS_s_axi_U->ap_done(ap_done);
    pooling_AXILiteS_s_axi_U->ap_idle(ap_idle);
    pooling_AXILiteS_s_axi_U->CHin_V(CHin_V);
    pooling_AXILiteS_s_axi_U->Hin_V(Hin_V);
    pooling_AXILiteS_s_axi_U->Win_V(Win_V);
    pooling_AXILiteS_s_axi_U->Kx_V(Kx_V);
    pooling_AXILiteS_s_axi_U->Ky_V(Ky_V);
    pooling_AXILiteS_s_axi_U->Sc_V(Sc_V);
    pooling_AXILiteS_s_axi_U->Sx_V(Sx_V);
    pooling_AXILiteS_s_axi_U->Sy_V(Sy_V);
    pooling_AXILiteS_s_axi_U->mode_V(mode_V);
    pooling_AXILiteS_s_axi_U->feature_in(feature_in);
    pooling_AXILiteS_s_axi_U->feature_out(feature_out);
    pooling_gmem_m_axi_U = new pooling_gmem_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_GMEM_ID_WIDTH,C_M_AXI_GMEM_ADDR_WIDTH,C_M_AXI_GMEM_DATA_WIDTH,C_M_AXI_GMEM_AWUSER_WIDTH,C_M_AXI_GMEM_ARUSER_WIDTH,C_M_AXI_GMEM_WUSER_WIDTH,C_M_AXI_GMEM_RUSER_WIDTH,C_M_AXI_GMEM_BUSER_WIDTH,C_M_AXI_GMEM_USER_VALUE,C_M_AXI_GMEM_PROT_VALUE,C_M_AXI_GMEM_CACHE_VALUE>("pooling_gmem_m_axi_U");
    pooling_gmem_m_axi_U->AWVALID(m_axi_gmem_AWVALID);
    pooling_gmem_m_axi_U->AWREADY(m_axi_gmem_AWREADY);
    pooling_gmem_m_axi_U->AWADDR(m_axi_gmem_AWADDR);
    pooling_gmem_m_axi_U->AWID(m_axi_gmem_AWID);
    pooling_gmem_m_axi_U->AWLEN(m_axi_gmem_AWLEN);
    pooling_gmem_m_axi_U->AWSIZE(m_axi_gmem_AWSIZE);
    pooling_gmem_m_axi_U->AWBURST(m_axi_gmem_AWBURST);
    pooling_gmem_m_axi_U->AWLOCK(m_axi_gmem_AWLOCK);
    pooling_gmem_m_axi_U->AWCACHE(m_axi_gmem_AWCACHE);
    pooling_gmem_m_axi_U->AWPROT(m_axi_gmem_AWPROT);
    pooling_gmem_m_axi_U->AWQOS(m_axi_gmem_AWQOS);
    pooling_gmem_m_axi_U->AWREGION(m_axi_gmem_AWREGION);
    pooling_gmem_m_axi_U->AWUSER(m_axi_gmem_AWUSER);
    pooling_gmem_m_axi_U->WVALID(m_axi_gmem_WVALID);
    pooling_gmem_m_axi_U->WREADY(m_axi_gmem_WREADY);
    pooling_gmem_m_axi_U->WDATA(m_axi_gmem_WDATA);
    pooling_gmem_m_axi_U->WSTRB(m_axi_gmem_WSTRB);
    pooling_gmem_m_axi_U->WLAST(m_axi_gmem_WLAST);
    pooling_gmem_m_axi_U->WID(m_axi_gmem_WID);
    pooling_gmem_m_axi_U->WUSER(m_axi_gmem_WUSER);
    pooling_gmem_m_axi_U->ARVALID(m_axi_gmem_ARVALID);
    pooling_gmem_m_axi_U->ARREADY(m_axi_gmem_ARREADY);
    pooling_gmem_m_axi_U->ARADDR(m_axi_gmem_ARADDR);
    pooling_gmem_m_axi_U->ARID(m_axi_gmem_ARID);
    pooling_gmem_m_axi_U->ARLEN(m_axi_gmem_ARLEN);
    pooling_gmem_m_axi_U->ARSIZE(m_axi_gmem_ARSIZE);
    pooling_gmem_m_axi_U->ARBURST(m_axi_gmem_ARBURST);
    pooling_gmem_m_axi_U->ARLOCK(m_axi_gmem_ARLOCK);
    pooling_gmem_m_axi_U->ARCACHE(m_axi_gmem_ARCACHE);
    pooling_gmem_m_axi_U->ARPROT(m_axi_gmem_ARPROT);
    pooling_gmem_m_axi_U->ARQOS(m_axi_gmem_ARQOS);
    pooling_gmem_m_axi_U->ARREGION(m_axi_gmem_ARREGION);
    pooling_gmem_m_axi_U->ARUSER(m_axi_gmem_ARUSER);
    pooling_gmem_m_axi_U->RVALID(m_axi_gmem_RVALID);
    pooling_gmem_m_axi_U->RREADY(m_axi_gmem_RREADY);
    pooling_gmem_m_axi_U->RDATA(m_axi_gmem_RDATA);
    pooling_gmem_m_axi_U->RLAST(m_axi_gmem_RLAST);
    pooling_gmem_m_axi_U->RID(m_axi_gmem_RID);
    pooling_gmem_m_axi_U->RUSER(m_axi_gmem_RUSER);
    pooling_gmem_m_axi_U->RRESP(m_axi_gmem_RRESP);
    pooling_gmem_m_axi_U->BVALID(m_axi_gmem_BVALID);
    pooling_gmem_m_axi_U->BREADY(m_axi_gmem_BREADY);
    pooling_gmem_m_axi_U->BRESP(m_axi_gmem_BRESP);
    pooling_gmem_m_axi_U->BID(m_axi_gmem_BID);
    pooling_gmem_m_axi_U->BUSER(m_axi_gmem_BUSER);
    pooling_gmem_m_axi_U->ACLK(ap_clk);
    pooling_gmem_m_axi_U->ARESET(ap_rst_n_inv);
    pooling_gmem_m_axi_U->ACLK_EN(ap_var_for_const0);
    pooling_gmem_m_axi_U->I_ARVALID(gmem_ARVALID);
    pooling_gmem_m_axi_U->I_ARREADY(gmem_ARREADY);
    pooling_gmem_m_axi_U->I_ARADDR(gmem_addr_1_reg_1084);
    pooling_gmem_m_axi_U->I_ARID(ap_var_for_const1);
    pooling_gmem_m_axi_U->I_ARLEN(gmem_ARLEN);
    pooling_gmem_m_axi_U->I_ARSIZE(ap_var_for_const2);
    pooling_gmem_m_axi_U->I_ARLOCK(ap_var_for_const3);
    pooling_gmem_m_axi_U->I_ARCACHE(ap_var_for_const4);
    pooling_gmem_m_axi_U->I_ARQOS(ap_var_for_const4);
    pooling_gmem_m_axi_U->I_ARPROT(ap_var_for_const2);
    pooling_gmem_m_axi_U->I_ARUSER(ap_var_for_const1);
    pooling_gmem_m_axi_U->I_ARBURST(ap_var_for_const3);
    pooling_gmem_m_axi_U->I_ARREGION(ap_var_for_const4);
    pooling_gmem_m_axi_U->I_RVALID(gmem_RVALID);
    pooling_gmem_m_axi_U->I_RREADY(gmem_RREADY);
    pooling_gmem_m_axi_U->I_RDATA(gmem_RDATA);
    pooling_gmem_m_axi_U->I_RID(gmem_RID);
    pooling_gmem_m_axi_U->I_RUSER(gmem_RUSER);
    pooling_gmem_m_axi_U->I_RRESP(gmem_RRESP);
    pooling_gmem_m_axi_U->I_RLAST(gmem_RLAST);
    pooling_gmem_m_axi_U->I_AWVALID(gmem_AWVALID);
    pooling_gmem_m_axi_U->I_AWREADY(gmem_AWREADY);
    pooling_gmem_m_axi_U->I_AWADDR(gmem_addr_reg_1123);
    pooling_gmem_m_axi_U->I_AWID(ap_var_for_const1);
    pooling_gmem_m_axi_U->I_AWLEN(ap_var_for_const5);
    pooling_gmem_m_axi_U->I_AWSIZE(ap_var_for_const2);
    pooling_gmem_m_axi_U->I_AWLOCK(ap_var_for_const3);
    pooling_gmem_m_axi_U->I_AWCACHE(ap_var_for_const4);
    pooling_gmem_m_axi_U->I_AWQOS(ap_var_for_const4);
    pooling_gmem_m_axi_U->I_AWPROT(ap_var_for_const2);
    pooling_gmem_m_axi_U->I_AWUSER(ap_var_for_const1);
    pooling_gmem_m_axi_U->I_AWBURST(ap_var_for_const3);
    pooling_gmem_m_axi_U->I_AWREGION(ap_var_for_const4);
    pooling_gmem_m_axi_U->I_WVALID(gmem_WVALID);
    pooling_gmem_m_axi_U->I_WREADY(gmem_WREADY);
    pooling_gmem_m_axi_U->I_WDATA(sum_5_reg_366);
    pooling_gmem_m_axi_U->I_WID(ap_var_for_const1);
    pooling_gmem_m_axi_U->I_WUSER(ap_var_for_const1);
    pooling_gmem_m_axi_U->I_WLAST(ap_var_for_const6);
    pooling_gmem_m_axi_U->I_WSTRB(ap_var_for_const7);
    pooling_gmem_m_axi_U->I_BVALID(gmem_BVALID);
    pooling_gmem_m_axi_U->I_BREADY(gmem_BREADY);
    pooling_gmem_m_axi_U->I_BRESP(gmem_BRESP);
    pooling_gmem_m_axi_U->I_BID(gmem_BID);
    pooling_gmem_m_axi_U->I_BUSER(gmem_BUSER);
    pooling_fadd_32nsbkb_U1 = new pooling_fadd_32nsbkb<1,5,32,32,32>("pooling_fadd_32nsbkb_U1");
    pooling_fadd_32nsbkb_U1->clk(ap_clk);
    pooling_fadd_32nsbkb_U1->reset(ap_rst_n_inv);
    pooling_fadd_32nsbkb_U1->din0(sum_2_reg_309);
    pooling_fadd_32nsbkb_U1->din1(reg_396);
    pooling_fadd_32nsbkb_U1->ce(ap_var_for_const0);
    pooling_fadd_32nsbkb_U1->dout(grp_fu_378_p2);
    pooling_fdiv_32nscud_U2 = new pooling_fdiv_32nscud<1,16,32,32,32>("pooling_fdiv_32nscud_U2");
    pooling_fdiv_32nscud_U2->clk(ap_clk);
    pooling_fdiv_32nscud_U2->reset(ap_rst_n_inv);
    pooling_fdiv_32nscud_U2->din0(i_op_assign_reg_288);
    pooling_fdiv_32nscud_U2->din1(tmp_8_reg_993);
    pooling_fdiv_32nscud_U2->ce(ap_var_for_const0);
    pooling_fdiv_32nscud_U2->dout(grp_fu_383_p2);
    pooling_uitofp_32dEe_U3 = new pooling_uitofp_32dEe<1,6,32,32>("pooling_uitofp_32dEe_U3");
    pooling_uitofp_32dEe_U3->clk(ap_clk);
    pooling_uitofp_32dEe_U3->reset(ap_rst_n_inv);
    pooling_uitofp_32dEe_U3->din0(grp_fu_388_p0);
    pooling_uitofp_32dEe_U3->ce(ap_var_for_const0);
    pooling_uitofp_32dEe_U3->dout(grp_fu_388_p1);
    pooling_fcmp_32nseOg_U4 = new pooling_fcmp_32nseOg<1,1,32,32,1>("pooling_fcmp_32nseOg_U4");
    pooling_fcmp_32nseOg_U4->din0(sum_3_reg_332);
    pooling_fcmp_32nseOg_U4->din1(reg_396);
    pooling_fcmp_32nseOg_U4->opcode(ap_var_for_const8);
    pooling_fcmp_32nseOg_U4->dout(tmp_23_fu_391_p2);
    pooling_sdiv_18s_fYi_U5 = new pooling_sdiv_18s_fYi<1,22,18,9,16>("pooling_sdiv_18s_fYi_U5");
    pooling_sdiv_18s_fYi_U5->clk(ap_clk);
    pooling_sdiv_18s_fYi_U5->reset(ap_rst_n_inv);
    pooling_sdiv_18s_fYi_U5->start(grp_fu_444_ap_start);
    pooling_sdiv_18s_fYi_U5->done(grp_fu_444_ap_done);
    pooling_sdiv_18s_fYi_U5->din0(grp_fu_444_p0);
    pooling_sdiv_18s_fYi_U5->din1(grp_fu_444_p1);
    pooling_sdiv_18s_fYi_U5->ce(ap_var_for_const0);
    pooling_sdiv_18s_fYi_U5->dout(grp_fu_444_p2);
    pooling_sdiv_18s_fYi_U6 = new pooling_sdiv_18s_fYi<1,22,18,9,16>("pooling_sdiv_18s_fYi_U6");
    pooling_sdiv_18s_fYi_U6->clk(ap_clk);
    pooling_sdiv_18s_fYi_U6->reset(ap_rst_n_inv);
    pooling_sdiv_18s_fYi_U6->start(grp_fu_472_ap_start);
    pooling_sdiv_18s_fYi_U6->done(grp_fu_472_ap_done);
    pooling_sdiv_18s_fYi_U6->din0(grp_fu_472_p0);
    pooling_sdiv_18s_fYi_U6->din1(grp_fu_472_p1);
    pooling_sdiv_18s_fYi_U6->ce(ap_var_for_const0);
    pooling_sdiv_18s_fYi_U6->dout(grp_fu_472_p2);
    pooling_udiv_16nsg8j_U7 = new pooling_udiv_16nsg8j<1,20,16,8,16>("pooling_udiv_16nsg8j_U7");
    pooling_udiv_16nsg8j_U7->clk(ap_clk);
    pooling_udiv_16nsg8j_U7->reset(ap_rst_n_inv);
    pooling_udiv_16nsg8j_U7->start(grp_fu_548_ap_start);
    pooling_udiv_16nsg8j_U7->done(grp_fu_548_ap_done);
    pooling_udiv_16nsg8j_U7->din0(CHin_V_read_reg_887);
    pooling_udiv_16nsg8j_U7->din1(grp_fu_548_p1);
    pooling_udiv_16nsg8j_U7->ce(ap_var_for_const0);
    pooling_udiv_16nsg8j_U7->dout(grp_fu_548_p2);
    pooling_sdiv_32s_hbi_U8 = new pooling_sdiv_32s_hbi<1,36,32,9,9>("pooling_sdiv_32s_hbi_U8");
    pooling_sdiv_32s_hbi_U8->clk(ap_clk);
    pooling_sdiv_32s_hbi_U8->reset(ap_rst_n_inv);
    pooling_sdiv_32s_hbi_U8->start(grp_fu_790_ap_start);
    pooling_sdiv_32s_hbi_U8->done(grp_fu_790_ap_done);
    pooling_sdiv_32s_hbi_U8->din0(i_op_assign_s_reg_206);
    pooling_sdiv_32s_hbi_U8->din1(grp_fu_790_p1);
    pooling_sdiv_32s_hbi_U8->ce(ap_var_for_const0);
    pooling_sdiv_32s_hbi_U8->dout(grp_fu_790_p2);
    pooling_mul_mul_1ibs_U9 = new pooling_mul_mul_1ibs<1,1,16,16,32>("pooling_mul_mul_1ibs_U9");
    pooling_mul_mul_1ibs_U9->din0(ret_V_8_fu_844_p0);
    pooling_mul_mul_1ibs_U9->din1(ret_V_8_fu_844_p1);
    pooling_mul_mul_1ibs_U9->dout(ret_V_8_fu_844_p2);
    pooling_ama_addmujbC_U10 = new pooling_ama_addmujbC<1,1,16,8,16,48,48>("pooling_ama_addmujbC_U10");
    pooling_ama_addmujbC_U10->din0(phi_mul8_reg_276);
    pooling_ama_addmujbC_U10->din1(grp_fu_849_p1);
    pooling_ama_addmujbC_U10->din2(grp_fu_849_p2);
    pooling_ama_addmujbC_U10->din3(ret_V_9_reg_1066);
    pooling_ama_addmujbC_U10->dout(grp_fu_849_p4);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state122);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state123);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state124);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state125);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state130);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state56);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state57);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state61);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state62);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state63);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state70);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state71);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state72);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state87);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state70);
    sensitive << ( exitcond4_fu_678_p2 );
    sensitive << ( gmem_RVALID );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_2_fu_539_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_2_fu_539_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_gmem_ARREADY);
    sensitive << ( gmem_ARREADY );
    sensitive << ( ap_reg_ioackin_gmem_ARREADY );

    SC_METHOD(thread_ap_sig_ioackin_gmem_AWREADY);
    sensitive << ( gmem_AWREADY );
    sensitive << ( ap_reg_ioackin_gmem_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_gmem_WREADY);
    sensitive << ( gmem_WREADY );
    sensitive << ( ap_reg_ioackin_gmem_WREADY );

    SC_METHOD(thread_c_fu_578_p2);
    sensitive << ( tmp_7_reg_986 );
    sensitive << ( i_op_assign_s_reg_206 );

    SC_METHOD(thread_ci_head_fu_563_p1);
    sensitive << ( grp_fu_548_p2 );

    SC_METHOD(thread_exitcond1_fu_552_p2);
    sensitive << ( tmp_5_reg_958 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( i_op_assign_1_reg_218 );

    SC_METHOD(thread_exitcond2_fu_604_p2);
    sensitive << ( Ky_V_read_reg_870 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( i_op_assign_3_reg_298 );

    SC_METHOD(thread_exitcond3_fu_637_p2);
    sensitive << ( Kx_V_read_reg_876 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( i_op_assign_4_reg_321 );

    SC_METHOD(thread_exitcond4_fu_678_p2);
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( exitcond4_fu_678_p2 );
    sensitive << ( gmem_RVALID );
    sensitive << ( Sc_V_read_reg_863 );
    sensitive << ( i_op_assign_5_reg_343 );

    SC_METHOD(thread_exitcond_fu_593_p2);
    sensitive << ( tmp_s_reg_953 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( i_op_assign_2_reg_253 );

    SC_METHOD(thread_feature_in2_sum_cast_fu_668_p1);
    sensitive << ( feature_in2_sum_fu_663_p2 );

    SC_METHOD(thread_feature_in2_sum_fu_663_p2);
    sensitive << ( tmp_16_cast_reg_948 );
    sensitive << ( tmp_17_cast_fu_660_p1 );

    SC_METHOD(thread_feature_in_load_1_to_fu_707_p1);
    sensitive << ( reg_396 );

    SC_METHOD(thread_feature_out4_sum_cas_fu_834_p1);
    sensitive << ( feature_out4_sum_fu_829_p2 );

    SC_METHOD(thread_feature_out4_sum_fu_829_p2);
    sensitive << ( tmp_15_cast_reg_943 );
    sensitive << ( tmp_22_cast_cast_fu_825_p1 );

    SC_METHOD(thread_gmem_ARLEN);
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( tmp_7_reg_986 );
    sensitive << ( ap_reg_ioackin_gmem_ARREADY );

    SC_METHOD(thread_gmem_ARVALID);
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_reg_ioackin_gmem_ARREADY );

    SC_METHOD(thread_gmem_AWVALID);
    sensitive << ( ap_CS_fsm_state124 );
    sensitive << ( ap_reg_ioackin_gmem_AWREADY );

    SC_METHOD(thread_gmem_BREADY);
    sensitive << ( ap_CS_fsm_state130 );
    sensitive << ( gmem_BVALID );

    SC_METHOD(thread_gmem_RREADY);
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( exitcond4_fu_678_p2 );
    sensitive << ( gmem_RVALID );

    SC_METHOD(thread_gmem_WVALID);
    sensitive << ( ap_CS_fsm_state125 );
    sensitive << ( ap_reg_ioackin_gmem_WREADY );

    SC_METHOD(thread_gmem_blk_n_AR);
    sensitive << ( m_axi_gmem_ARREADY );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state49 );

    SC_METHOD(thread_gmem_blk_n_AW);
    sensitive << ( m_axi_gmem_AWREADY );
    sensitive << ( ap_CS_fsm_state124 );

    SC_METHOD(thread_gmem_blk_n_B);
    sensitive << ( m_axi_gmem_BVALID );
    sensitive << ( ap_CS_fsm_state130 );

    SC_METHOD(thread_gmem_blk_n_R);
    sensitive << ( m_axi_gmem_RVALID );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( exitcond4_fu_678_p2 );

    SC_METHOD(thread_gmem_blk_n_W);
    sensitive << ( m_axi_gmem_WREADY );
    sensitive << ( ap_CS_fsm_state125 );

    SC_METHOD(thread_grp_fu_388_p0);
    sensitive << ( ret_V_2_reg_933 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_grp_fu_444_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_grp_fu_444_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ret_V_fu_430_p2 );

    SC_METHOD(thread_grp_fu_444_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_fu_444_p10 );

    SC_METHOD(thread_grp_fu_444_p10);
    sensitive << ( Sy_V );

    SC_METHOD(thread_grp_fu_472_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_grp_fu_472_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ret_V_1_fu_458_p2 );

    SC_METHOD(thread_grp_fu_472_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_fu_472_p10 );

    SC_METHOD(thread_grp_fu_472_p10);
    sensitive << ( Sx_V );

    SC_METHOD(thread_grp_fu_548_ap_start);
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_grp_fu_548_p1);
    sensitive << ( tmp_6_reg_981 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_grp_fu_790_ap_start);
    sensitive << ( ap_CS_fsm_state87 );

    SC_METHOD(thread_grp_fu_790_p1);
    sensitive << ( tmp_7_reg_986 );
    sensitive << ( ap_CS_fsm_state87 );

    SC_METHOD(thread_grp_fu_849_p1);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( exitcond3_fu_637_p2 );
    sensitive << ( grp_fu_849_p10 );

    SC_METHOD(thread_grp_fu_849_p10);
    sensitive << ( i_op_assign_4_reg_321 );

    SC_METHOD(thread_grp_fu_849_p2);
    sensitive << ( rhs_V_3_reg_963 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( exitcond3_fu_637_p2 );

    SC_METHOD(thread_h_V_fu_619_p2);
    sensitive << ( phi_mul1_reg_229 );
    sensitive << ( tmp_11_fu_615_p1 );

    SC_METHOD(thread_i_fu_557_p2);
    sensitive << ( i_op_assign_1_reg_218 );

    SC_METHOD(thread_ii_fu_609_p2);
    sensitive << ( i_op_assign_3_reg_298 );

    SC_METHOD(thread_j_fu_598_p2);
    sensitive << ( i_op_assign_2_reg_253 );

    SC_METHOD(thread_jj_fu_642_p2);
    sensitive << ( i_op_assign_4_reg_321 );

    SC_METHOD(thread_lhs_V_1_fu_450_p1);
    sensitive << ( Win_V );

    SC_METHOD(thread_lhs_V_2_fu_481_p1);
    sensitive << ( Kx_V_read_reg_876 );

    SC_METHOD(thread_lhs_V_fu_422_p1);
    sensitive << ( Hin_V );

    SC_METHOD(thread_next_mul1_fu_567_p2);
    sensitive << ( ci_head_fu_563_p1 );
    sensitive << ( ret_V_4_reg_241 );

    SC_METHOD(thread_next_mul2_fu_573_p2);
    sensitive << ( rhs_V_2_reg_923 );
    sensitive << ( phi_mul1_reg_229 );

    SC_METHOD(thread_next_mul9_fu_583_p2);
    sensitive << ( lhs_V_2_reg_928 );
    sensitive << ( phi_mul8_reg_276 );

    SC_METHOD(thread_next_mul_fu_588_p2);
    sensitive << ( ci_head_reg_1015 );
    sensitive << ( ret_V_6_reg_264 );

    SC_METHOD(thread_notlhs8_fu_743_p2);
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( tmp_18_fu_711_p4 );

    SC_METHOD(thread_notlhs_fu_725_p2);
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( tmp_16_fu_693_p4 );

    SC_METHOD(thread_notrhs9_fu_749_p2);
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( tmp_19_fu_721_p1 );

    SC_METHOD(thread_notrhs_fu_731_p2);
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( tmp_17_fu_703_p1 );

    SC_METHOD(thread_ret_V_10_cast_fu_652_p1);
    sensitive << ( grp_fu_849_p4 );

    SC_METHOD(thread_ret_V_11_fu_655_p2);
    sensitive << ( rhs_V_8_cast_reg_1001 );
    sensitive << ( ret_V_10_cast_fu_652_p1 );

    SC_METHOD(thread_ret_V_1_fu_458_p2);
    sensitive << ( lhs_V_1_fu_450_p1 );
    sensitive << ( rhs_V_1_fu_454_p1 );

    SC_METHOD(thread_ret_V_2_fu_484_p0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ret_V_2_fu_484_p00 );

    SC_METHOD(thread_ret_V_2_fu_484_p00);
    sensitive << ( Kx_V_read_reg_876 );

    SC_METHOD(thread_ret_V_2_fu_484_p1);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ret_V_2_fu_484_p10 );

    SC_METHOD(thread_ret_V_2_fu_484_p10);
    sensitive << ( Ky_V_read_reg_870 );

    SC_METHOD(thread_ret_V_2_fu_484_p2);
    sensitive << ( ret_V_2_fu_484_p0 );
    sensitive << ( ret_V_2_fu_484_p1 );

    SC_METHOD(thread_ret_V_5_cast_fu_813_p1);
    sensitive << ( ret_V_5_reg_1113 );

    SC_METHOD(thread_ret_V_5_fu_785_p0);
    sensitive << ( rhs_V_4_reg_975 );
    sensitive << ( ap_CS_fsm_state87 );

    SC_METHOD(thread_ret_V_5_fu_785_p1);
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( ret_V_5_fu_785_p10 );

    SC_METHOD(thread_ret_V_5_fu_785_p10);
    sensitive << ( ret_V_4_reg_241 );

    SC_METHOD(thread_ret_V_5_fu_785_p2);
    sensitive << ( ret_V_5_fu_785_p0 );
    sensitive << ( ret_V_5_fu_785_p1 );

    SC_METHOD(thread_ret_V_8_fu_844_p0);
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ret_V_8_fu_844_p00 );

    SC_METHOD(thread_ret_V_8_fu_844_p00);
    sensitive << ( h_V_fu_619_p2 );

    SC_METHOD(thread_ret_V_8_fu_844_p1);
    sensitive << ( rhs_V_3_reg_963 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_ret_V_9_fu_632_p0);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ret_V_9_fu_632_p00 );

    SC_METHOD(thread_ret_V_9_fu_632_p00);
    sensitive << ( ret_V_8_reg_1061 );

    SC_METHOD(thread_ret_V_9_fu_632_p1);
    sensitive << ( rhs_V_4_reg_975 );
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_ret_V_9_fu_632_p2);
    sensitive << ( ret_V_9_fu_632_p0 );
    sensitive << ( ret_V_9_fu_632_p1 );

    SC_METHOD(thread_ret_V_fu_430_p2);
    sensitive << ( lhs_V_fu_422_p1 );
    sensitive << ( rhs_V_fu_426_p1 );

    SC_METHOD(thread_rhs_V_1_fu_454_p1);
    sensitive << ( Kx_V );

    SC_METHOD(thread_rhs_V_2_fu_478_p1);
    sensitive << ( Ky_V_read_reg_870 );

    SC_METHOD(thread_rhs_V_3_fu_520_p1);
    sensitive << ( CHin_V_read_reg_887 );

    SC_METHOD(thread_rhs_V_4_fu_530_p1);
    sensitive << ( Win_V_read_reg_882 );

    SC_METHOD(thread_rhs_V_8_cast_fu_544_p1);
    sensitive << ( i_op_assign_s_reg_206 );

    SC_METHOD(thread_rhs_V_fu_426_p1);
    sensitive << ( Ky_V );

    SC_METHOD(thread_s_fu_683_p2);
    sensitive << ( i_op_assign_5_reg_343 );

    SC_METHOD(thread_sum_3_to_int_fu_689_p1);
    sensitive << ( sum_3_reg_332 );

    SC_METHOD(thread_sum_6_fu_773_p3);
    sensitive << ( reg_396 );
    sensitive << ( sum_3_reg_332 );
    sensitive << ( tmp_24_fu_767_p2 );

    SC_METHOD(thread_sum_fu_523_p3);
    sensitive << ( mode_V_read_reg_858 );

    SC_METHOD(thread_tmp1_cast_fu_816_p1);
    sensitive << ( tmp1_reg_1118 );

    SC_METHOD(thread_tmp1_fu_807_p2);
    sensitive << ( tmp_20_cast_fu_803_p1 );
    sensitive << ( tmp_18_cast_fu_795_p1 );

    SC_METHOD(thread_tmp_10_fu_510_p1);
    sensitive << ( grp_fu_444_p2 );

    SC_METHOD(thread_tmp_11_fu_615_p1);
    sensitive << ( i_op_assign_3_reg_298 );

    SC_METHOD(thread_tmp_13_fu_819_p2);
    sensitive << ( ret_V_5_cast_fu_813_p1 );
    sensitive << ( tmp1_cast_fu_816_p1 );

    SC_METHOD(thread_tmp_15_cast_fu_494_p1);
    sensitive << ( tmp_3_reg_893 );

    SC_METHOD(thread_tmp_15_fu_799_p1);
    sensitive << ( grp_fu_790_p2 );

    SC_METHOD(thread_tmp_16_cast_fu_497_p1);
    sensitive << ( tmp_4_reg_898 );

    SC_METHOD(thread_tmp_16_fu_693_p4);
    sensitive << ( sum_3_to_int_fu_689_p1 );

    SC_METHOD(thread_tmp_17_cast_fu_660_p1);
    sensitive << ( ret_V_11_reg_1079 );

    SC_METHOD(thread_tmp_17_fu_703_p1);
    sensitive << ( sum_3_to_int_fu_689_p1 );

    SC_METHOD(thread_tmp_18_cast_fu_795_p1);
    sensitive << ( ret_V_6_reg_264 );

    SC_METHOD(thread_tmp_18_fu_711_p4);
    sensitive << ( feature_in_load_1_to_fu_707_p1 );

    SC_METHOD(thread_tmp_19_fu_721_p1);
    sensitive << ( feature_in_load_1_to_fu_707_p1 );

    SC_METHOD(thread_tmp_20_cast_fu_803_p1);
    sensitive << ( tmp_15_fu_799_p1 );

    SC_METHOD(thread_tmp_20_fu_737_p2);
    sensitive << ( notrhs_fu_731_p2 );
    sensitive << ( notlhs_fu_725_p2 );

    SC_METHOD(thread_tmp_21_fu_755_p2);
    sensitive << ( notrhs9_fu_749_p2 );
    sensitive << ( notlhs8_fu_743_p2 );

    SC_METHOD(thread_tmp_22_cast_cast_fu_825_p1);
    sensitive << ( tmp_13_fu_819_p2 );

    SC_METHOD(thread_tmp_22_fu_761_p2);
    sensitive << ( tmp_20_fu_737_p2 );
    sensitive << ( tmp_21_fu_755_p2 );

    SC_METHOD(thread_tmp_24_fu_767_p2);
    sensitive << ( tmp_22_fu_761_p2 );
    sensitive << ( tmp_23_fu_391_p2 );

    SC_METHOD(thread_tmp_2_fu_539_p2);
    sensitive << ( rhs_V_3_reg_963 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( i_op_assign_s_reg_206 );

    SC_METHOD(thread_tmp_5_fu_514_p2);
    sensitive << ( tmp_10_fu_510_p1 );

    SC_METHOD(thread_tmp_6_fu_533_p1);
    sensitive << ( Sc_V_read_reg_863 );

    SC_METHOD(thread_tmp_7_fu_536_p1);
    sensitive << ( Sc_V_read_reg_863 );

    SC_METHOD(thread_tmp_9_fu_500_p1);
    sensitive << ( grp_fu_472_p2 );

    SC_METHOD(thread_tmp_s_fu_504_p2);
    sensitive << ( tmp_9_fu_500_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( exitcond4_fu_678_p2 );
    sensitive << ( ap_CS_fsm_state124 );
    sensitive << ( ap_CS_fsm_state125 );
    sensitive << ( ap_CS_fsm_state130 );
    sensitive << ( gmem_RVALID );
    sensitive << ( gmem_BVALID );
    sensitive << ( mode_V_read_reg_858 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_2_fu_539_p2 );
    sensitive << ( exitcond1_reg_1006 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( exitcond2_fu_604_p2 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( exitcond3_fu_637_p2 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( exitcond_fu_593_p2 );
    sensitive << ( ap_sig_ioackin_gmem_ARREADY );
    sensitive << ( ap_sig_ioackin_gmem_AWREADY );
    sensitive << ( ap_sig_ioackin_gmem_WREADY );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const8);

    ap_CS_fsm = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    ap_reg_ioackin_gmem_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_gmem_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_gmem_WREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pooling_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_gmem_AWVALID, "(port)m_axi_gmem_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem_AWREADY, "(port)m_axi_gmem_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem_AWADDR, "(port)m_axi_gmem_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem_AWID, "(port)m_axi_gmem_AWID");
    sc_trace(mVcdFile, m_axi_gmem_AWLEN, "(port)m_axi_gmem_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem_AWSIZE, "(port)m_axi_gmem_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem_AWBURST, "(port)m_axi_gmem_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem_AWLOCK, "(port)m_axi_gmem_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem_AWCACHE, "(port)m_axi_gmem_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem_AWPROT, "(port)m_axi_gmem_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem_AWQOS, "(port)m_axi_gmem_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem_AWREGION, "(port)m_axi_gmem_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem_AWUSER, "(port)m_axi_gmem_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem_WVALID, "(port)m_axi_gmem_WVALID");
    sc_trace(mVcdFile, m_axi_gmem_WREADY, "(port)m_axi_gmem_WREADY");
    sc_trace(mVcdFile, m_axi_gmem_WDATA, "(port)m_axi_gmem_WDATA");
    sc_trace(mVcdFile, m_axi_gmem_WSTRB, "(port)m_axi_gmem_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem_WLAST, "(port)m_axi_gmem_WLAST");
    sc_trace(mVcdFile, m_axi_gmem_WID, "(port)m_axi_gmem_WID");
    sc_trace(mVcdFile, m_axi_gmem_WUSER, "(port)m_axi_gmem_WUSER");
    sc_trace(mVcdFile, m_axi_gmem_ARVALID, "(port)m_axi_gmem_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem_ARREADY, "(port)m_axi_gmem_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem_ARADDR, "(port)m_axi_gmem_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem_ARID, "(port)m_axi_gmem_ARID");
    sc_trace(mVcdFile, m_axi_gmem_ARLEN, "(port)m_axi_gmem_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem_ARSIZE, "(port)m_axi_gmem_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem_ARBURST, "(port)m_axi_gmem_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem_ARLOCK, "(port)m_axi_gmem_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem_ARCACHE, "(port)m_axi_gmem_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem_ARPROT, "(port)m_axi_gmem_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem_ARQOS, "(port)m_axi_gmem_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem_ARREGION, "(port)m_axi_gmem_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem_ARUSER, "(port)m_axi_gmem_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem_RVALID, "(port)m_axi_gmem_RVALID");
    sc_trace(mVcdFile, m_axi_gmem_RREADY, "(port)m_axi_gmem_RREADY");
    sc_trace(mVcdFile, m_axi_gmem_RDATA, "(port)m_axi_gmem_RDATA");
    sc_trace(mVcdFile, m_axi_gmem_RLAST, "(port)m_axi_gmem_RLAST");
    sc_trace(mVcdFile, m_axi_gmem_RID, "(port)m_axi_gmem_RID");
    sc_trace(mVcdFile, m_axi_gmem_RUSER, "(port)m_axi_gmem_RUSER");
    sc_trace(mVcdFile, m_axi_gmem_RRESP, "(port)m_axi_gmem_RRESP");
    sc_trace(mVcdFile, m_axi_gmem_BVALID, "(port)m_axi_gmem_BVALID");
    sc_trace(mVcdFile, m_axi_gmem_BREADY, "(port)m_axi_gmem_BREADY");
    sc_trace(mVcdFile, m_axi_gmem_BRESP, "(port)m_axi_gmem_BRESP");
    sc_trace(mVcdFile, m_axi_gmem_BID, "(port)m_axi_gmem_BID");
    sc_trace(mVcdFile, m_axi_gmem_BUSER, "(port)m_axi_gmem_BUSER");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, CHin_V, "CHin_V");
    sc_trace(mVcdFile, Hin_V, "Hin_V");
    sc_trace(mVcdFile, Win_V, "Win_V");
    sc_trace(mVcdFile, Kx_V, "Kx_V");
    sc_trace(mVcdFile, Ky_V, "Ky_V");
    sc_trace(mVcdFile, Sc_V, "Sc_V");
    sc_trace(mVcdFile, Sx_V, "Sx_V");
    sc_trace(mVcdFile, Sy_V, "Sy_V");
    sc_trace(mVcdFile, mode_V, "mode_V");
    sc_trace(mVcdFile, feature_in, "feature_in");
    sc_trace(mVcdFile, feature_out, "feature_out");
    sc_trace(mVcdFile, gmem_blk_n_AR, "gmem_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state63, "ap_CS_fsm_state63");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, gmem_blk_n_R, "gmem_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state56, "ap_CS_fsm_state56");
    sc_trace(mVcdFile, ap_CS_fsm_state70, "ap_CS_fsm_state70");
    sc_trace(mVcdFile, exitcond4_fu_678_p2, "exitcond4_fu_678_p2");
    sc_trace(mVcdFile, gmem_blk_n_AW, "gmem_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state124, "ap_CS_fsm_state124");
    sc_trace(mVcdFile, gmem_blk_n_W, "gmem_blk_n_W");
    sc_trace(mVcdFile, ap_CS_fsm_state125, "ap_CS_fsm_state125");
    sc_trace(mVcdFile, gmem_blk_n_B, "gmem_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state130, "ap_CS_fsm_state130");
    sc_trace(mVcdFile, gmem_AWVALID, "gmem_AWVALID");
    sc_trace(mVcdFile, gmem_AWREADY, "gmem_AWREADY");
    sc_trace(mVcdFile, gmem_WVALID, "gmem_WVALID");
    sc_trace(mVcdFile, gmem_WREADY, "gmem_WREADY");
    sc_trace(mVcdFile, gmem_ARVALID, "gmem_ARVALID");
    sc_trace(mVcdFile, gmem_ARREADY, "gmem_ARREADY");
    sc_trace(mVcdFile, gmem_ARLEN, "gmem_ARLEN");
    sc_trace(mVcdFile, gmem_RVALID, "gmem_RVALID");
    sc_trace(mVcdFile, gmem_RREADY, "gmem_RREADY");
    sc_trace(mVcdFile, gmem_RDATA, "gmem_RDATA");
    sc_trace(mVcdFile, gmem_RLAST, "gmem_RLAST");
    sc_trace(mVcdFile, gmem_RID, "gmem_RID");
    sc_trace(mVcdFile, gmem_RUSER, "gmem_RUSER");
    sc_trace(mVcdFile, gmem_RRESP, "gmem_RRESP");
    sc_trace(mVcdFile, gmem_BVALID, "gmem_BVALID");
    sc_trace(mVcdFile, gmem_BREADY, "gmem_BREADY");
    sc_trace(mVcdFile, gmem_BRESP, "gmem_BRESP");
    sc_trace(mVcdFile, gmem_BID, "gmem_BID");
    sc_trace(mVcdFile, gmem_BUSER, "gmem_BUSER");
    sc_trace(mVcdFile, reg_396, "reg_396");
    sc_trace(mVcdFile, ap_block_state70, "ap_block_state70");
    sc_trace(mVcdFile, mode_V_read_reg_858, "mode_V_read_reg_858");
    sc_trace(mVcdFile, Sc_V_read_reg_863, "Sc_V_read_reg_863");
    sc_trace(mVcdFile, Ky_V_read_reg_870, "Ky_V_read_reg_870");
    sc_trace(mVcdFile, Kx_V_read_reg_876, "Kx_V_read_reg_876");
    sc_trace(mVcdFile, Win_V_read_reg_882, "Win_V_read_reg_882");
    sc_trace(mVcdFile, CHin_V_read_reg_887, "CHin_V_read_reg_887");
    sc_trace(mVcdFile, tmp_3_reg_893, "tmp_3_reg_893");
    sc_trace(mVcdFile, tmp_4_reg_898, "tmp_4_reg_898");
    sc_trace(mVcdFile, rhs_V_2_fu_478_p1, "rhs_V_2_fu_478_p1");
    sc_trace(mVcdFile, rhs_V_2_reg_923, "rhs_V_2_reg_923");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, lhs_V_2_fu_481_p1, "lhs_V_2_fu_481_p1");
    sc_trace(mVcdFile, lhs_V_2_reg_928, "lhs_V_2_reg_928");
    sc_trace(mVcdFile, ret_V_2_fu_484_p2, "ret_V_2_fu_484_p2");
    sc_trace(mVcdFile, ret_V_2_reg_933, "ret_V_2_reg_933");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, tmp_15_cast_fu_494_p1, "tmp_15_cast_fu_494_p1");
    sc_trace(mVcdFile, tmp_15_cast_reg_943, "tmp_15_cast_reg_943");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, tmp_16_cast_fu_497_p1, "tmp_16_cast_fu_497_p1");
    sc_trace(mVcdFile, tmp_16_cast_reg_948, "tmp_16_cast_reg_948");
    sc_trace(mVcdFile, tmp_s_fu_504_p2, "tmp_s_fu_504_p2");
    sc_trace(mVcdFile, tmp_s_reg_953, "tmp_s_reg_953");
    sc_trace(mVcdFile, tmp_5_fu_514_p2, "tmp_5_fu_514_p2");
    sc_trace(mVcdFile, tmp_5_reg_958, "tmp_5_reg_958");
    sc_trace(mVcdFile, rhs_V_3_fu_520_p1, "rhs_V_3_fu_520_p1");
    sc_trace(mVcdFile, rhs_V_3_reg_963, "rhs_V_3_reg_963");
    sc_trace(mVcdFile, sum_fu_523_p3, "sum_fu_523_p3");
    sc_trace(mVcdFile, sum_reg_970, "sum_reg_970");
    sc_trace(mVcdFile, rhs_V_4_fu_530_p1, "rhs_V_4_fu_530_p1");
    sc_trace(mVcdFile, rhs_V_4_reg_975, "rhs_V_4_reg_975");
    sc_trace(mVcdFile, tmp_6_fu_533_p1, "tmp_6_fu_533_p1");
    sc_trace(mVcdFile, tmp_6_reg_981, "tmp_6_reg_981");
    sc_trace(mVcdFile, tmp_7_fu_536_p1, "tmp_7_fu_536_p1");
    sc_trace(mVcdFile, tmp_7_reg_986, "tmp_7_reg_986");
    sc_trace(mVcdFile, grp_fu_388_p1, "grp_fu_388_p1");
    sc_trace(mVcdFile, tmp_8_reg_993, "tmp_8_reg_993");
    sc_trace(mVcdFile, rhs_V_8_cast_fu_544_p1, "rhs_V_8_cast_fu_544_p1");
    sc_trace(mVcdFile, rhs_V_8_cast_reg_1001, "rhs_V_8_cast_reg_1001");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, tmp_2_fu_539_p2, "tmp_2_fu_539_p2");
    sc_trace(mVcdFile, exitcond1_fu_552_p2, "exitcond1_fu_552_p2");
    sc_trace(mVcdFile, exitcond1_reg_1006, "exitcond1_reg_1006");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, i_fu_557_p2, "i_fu_557_p2");
    sc_trace(mVcdFile, i_reg_1010, "i_reg_1010");
    sc_trace(mVcdFile, ci_head_fu_563_p1, "ci_head_fu_563_p1");
    sc_trace(mVcdFile, ci_head_reg_1015, "ci_head_reg_1015");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, next_mul1_fu_567_p2, "next_mul1_fu_567_p2");
    sc_trace(mVcdFile, next_mul1_reg_1020, "next_mul1_reg_1020");
    sc_trace(mVcdFile, next_mul2_fu_573_p2, "next_mul2_fu_573_p2");
    sc_trace(mVcdFile, next_mul2_reg_1025, "next_mul2_reg_1025");
    sc_trace(mVcdFile, c_fu_578_p2, "c_fu_578_p2");
    sc_trace(mVcdFile, next_mul9_fu_583_p2, "next_mul9_fu_583_p2");
    sc_trace(mVcdFile, next_mul9_reg_1035, "next_mul9_reg_1035");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, next_mul_fu_588_p2, "next_mul_fu_588_p2");
    sc_trace(mVcdFile, next_mul_reg_1040, "next_mul_reg_1040");
    sc_trace(mVcdFile, j_fu_598_p2, "j_fu_598_p2");
    sc_trace(mVcdFile, j_reg_1048, "j_reg_1048");
    sc_trace(mVcdFile, ii_fu_609_p2, "ii_fu_609_p2");
    sc_trace(mVcdFile, ii_reg_1056, "ii_reg_1056");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, ret_V_8_fu_844_p2, "ret_V_8_fu_844_p2");
    sc_trace(mVcdFile, ret_V_8_reg_1061, "ret_V_8_reg_1061");
    sc_trace(mVcdFile, exitcond2_fu_604_p2, "exitcond2_fu_604_p2");
    sc_trace(mVcdFile, ret_V_9_fu_632_p2, "ret_V_9_fu_632_p2");
    sc_trace(mVcdFile, ret_V_9_reg_1066, "ret_V_9_reg_1066");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, jj_fu_642_p2, "jj_fu_642_p2");
    sc_trace(mVcdFile, jj_reg_1074, "jj_reg_1074");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, ret_V_11_fu_655_p2, "ret_V_11_fu_655_p2");
    sc_trace(mVcdFile, ret_V_11_reg_1079, "ret_V_11_reg_1079");
    sc_trace(mVcdFile, exitcond3_fu_637_p2, "exitcond3_fu_637_p2");
    sc_trace(mVcdFile, gmem_addr_1_reg_1084, "gmem_addr_1_reg_1084");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, grp_fu_378_p2, "grp_fu_378_p2");
    sc_trace(mVcdFile, sum_4_reg_1090, "sum_4_reg_1090");
    sc_trace(mVcdFile, ap_CS_fsm_state61, "ap_CS_fsm_state61");
    sc_trace(mVcdFile, s_fu_683_p2, "s_fu_683_p2");
    sc_trace(mVcdFile, s_reg_1098, "s_reg_1098");
    sc_trace(mVcdFile, sum_6_fu_773_p3, "sum_6_fu_773_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state71, "ap_CS_fsm_state71");
    sc_trace(mVcdFile, grp_fu_383_p2, "grp_fu_383_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state87, "ap_CS_fsm_state87");
    sc_trace(mVcdFile, ret_V_5_fu_785_p2, "ret_V_5_fu_785_p2");
    sc_trace(mVcdFile, ret_V_5_reg_1113, "ret_V_5_reg_1113");
    sc_trace(mVcdFile, tmp1_fu_807_p2, "tmp1_fu_807_p2");
    sc_trace(mVcdFile, tmp1_reg_1118, "tmp1_reg_1118");
    sc_trace(mVcdFile, ap_CS_fsm_state122, "ap_CS_fsm_state122");
    sc_trace(mVcdFile, gmem_addr_reg_1123, "gmem_addr_reg_1123");
    sc_trace(mVcdFile, ap_CS_fsm_state123, "ap_CS_fsm_state123");
    sc_trace(mVcdFile, i_op_assign_s_reg_206, "i_op_assign_s_reg_206");
    sc_trace(mVcdFile, i_op_assign_1_reg_218, "i_op_assign_1_reg_218");
    sc_trace(mVcdFile, exitcond_fu_593_p2, "exitcond_fu_593_p2");
    sc_trace(mVcdFile, phi_mul1_reg_229, "phi_mul1_reg_229");
    sc_trace(mVcdFile, ret_V_4_reg_241, "ret_V_4_reg_241");
    sc_trace(mVcdFile, i_op_assign_2_reg_253, "i_op_assign_2_reg_253");
    sc_trace(mVcdFile, ret_V_6_reg_264, "ret_V_6_reg_264");
    sc_trace(mVcdFile, phi_mul8_reg_276, "phi_mul8_reg_276");
    sc_trace(mVcdFile, i_op_assign_reg_288, "i_op_assign_reg_288");
    sc_trace(mVcdFile, i_op_assign_3_reg_298, "i_op_assign_3_reg_298");
    sc_trace(mVcdFile, sum_2_reg_309, "sum_2_reg_309");
    sc_trace(mVcdFile, ap_CS_fsm_state72, "ap_CS_fsm_state72");
    sc_trace(mVcdFile, i_op_assign_4_reg_321, "i_op_assign_4_reg_321");
    sc_trace(mVcdFile, sum_3_reg_332, "sum_3_reg_332");
    sc_trace(mVcdFile, ap_CS_fsm_state69, "ap_CS_fsm_state69");
    sc_trace(mVcdFile, i_op_assign_5_reg_343, "i_op_assign_5_reg_343");
    sc_trace(mVcdFile, sum_2_be_reg_354, "sum_2_be_reg_354");
    sc_trace(mVcdFile, ap_CS_fsm_state62, "ap_CS_fsm_state62");
    sc_trace(mVcdFile, sum_5_reg_366, "sum_5_reg_366");
    sc_trace(mVcdFile, feature_in2_sum_cast_fu_668_p1, "feature_in2_sum_cast_fu_668_p1");
    sc_trace(mVcdFile, feature_out4_sum_cas_fu_834_p1, "feature_out4_sum_cas_fu_834_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_gmem_ARREADY, "ap_reg_ioackin_gmem_ARREADY");
    sc_trace(mVcdFile, ap_sig_ioackin_gmem_ARREADY, "ap_sig_ioackin_gmem_ARREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_gmem_AWREADY, "ap_reg_ioackin_gmem_AWREADY");
    sc_trace(mVcdFile, ap_sig_ioackin_gmem_AWREADY, "ap_sig_ioackin_gmem_AWREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_gmem_WREADY, "ap_reg_ioackin_gmem_WREADY");
    sc_trace(mVcdFile, ap_sig_ioackin_gmem_WREADY, "ap_sig_ioackin_gmem_WREADY");
    sc_trace(mVcdFile, ap_CS_fsm_state57, "ap_CS_fsm_state57");
    sc_trace(mVcdFile, grp_fu_388_p0, "grp_fu_388_p0");
    sc_trace(mVcdFile, lhs_V_fu_422_p1, "lhs_V_fu_422_p1");
    sc_trace(mVcdFile, rhs_V_fu_426_p1, "rhs_V_fu_426_p1");
    sc_trace(mVcdFile, ret_V_fu_430_p2, "ret_V_fu_430_p2");
    sc_trace(mVcdFile, grp_fu_444_p0, "grp_fu_444_p0");
    sc_trace(mVcdFile, grp_fu_444_p1, "grp_fu_444_p1");
    sc_trace(mVcdFile, lhs_V_1_fu_450_p1, "lhs_V_1_fu_450_p1");
    sc_trace(mVcdFile, rhs_V_1_fu_454_p1, "rhs_V_1_fu_454_p1");
    sc_trace(mVcdFile, ret_V_1_fu_458_p2, "ret_V_1_fu_458_p2");
    sc_trace(mVcdFile, grp_fu_472_p0, "grp_fu_472_p0");
    sc_trace(mVcdFile, grp_fu_472_p1, "grp_fu_472_p1");
    sc_trace(mVcdFile, ret_V_2_fu_484_p0, "ret_V_2_fu_484_p0");
    sc_trace(mVcdFile, ret_V_2_fu_484_p1, "ret_V_2_fu_484_p1");
    sc_trace(mVcdFile, grp_fu_472_p2, "grp_fu_472_p2");
    sc_trace(mVcdFile, tmp_9_fu_500_p1, "tmp_9_fu_500_p1");
    sc_trace(mVcdFile, grp_fu_444_p2, "grp_fu_444_p2");
    sc_trace(mVcdFile, tmp_10_fu_510_p1, "tmp_10_fu_510_p1");
    sc_trace(mVcdFile, grp_fu_548_p1, "grp_fu_548_p1");
    sc_trace(mVcdFile, grp_fu_548_p2, "grp_fu_548_p2");
    sc_trace(mVcdFile, tmp_11_fu_615_p1, "tmp_11_fu_615_p1");
    sc_trace(mVcdFile, h_V_fu_619_p2, "h_V_fu_619_p2");
    sc_trace(mVcdFile, ret_V_9_fu_632_p0, "ret_V_9_fu_632_p0");
    sc_trace(mVcdFile, ret_V_9_fu_632_p1, "ret_V_9_fu_632_p1");
    sc_trace(mVcdFile, grp_fu_849_p4, "grp_fu_849_p4");
    sc_trace(mVcdFile, ret_V_10_cast_fu_652_p1, "ret_V_10_cast_fu_652_p1");
    sc_trace(mVcdFile, tmp_17_cast_fu_660_p1, "tmp_17_cast_fu_660_p1");
    sc_trace(mVcdFile, feature_in2_sum_fu_663_p2, "feature_in2_sum_fu_663_p2");
    sc_trace(mVcdFile, sum_3_to_int_fu_689_p1, "sum_3_to_int_fu_689_p1");
    sc_trace(mVcdFile, feature_in_load_1_to_fu_707_p1, "feature_in_load_1_to_fu_707_p1");
    sc_trace(mVcdFile, tmp_16_fu_693_p4, "tmp_16_fu_693_p4");
    sc_trace(mVcdFile, tmp_17_fu_703_p1, "tmp_17_fu_703_p1");
    sc_trace(mVcdFile, notrhs_fu_731_p2, "notrhs_fu_731_p2");
    sc_trace(mVcdFile, notlhs_fu_725_p2, "notlhs_fu_725_p2");
    sc_trace(mVcdFile, tmp_18_fu_711_p4, "tmp_18_fu_711_p4");
    sc_trace(mVcdFile, tmp_19_fu_721_p1, "tmp_19_fu_721_p1");
    sc_trace(mVcdFile, notrhs9_fu_749_p2, "notrhs9_fu_749_p2");
    sc_trace(mVcdFile, notlhs8_fu_743_p2, "notlhs8_fu_743_p2");
    sc_trace(mVcdFile, tmp_20_fu_737_p2, "tmp_20_fu_737_p2");
    sc_trace(mVcdFile, tmp_21_fu_755_p2, "tmp_21_fu_755_p2");
    sc_trace(mVcdFile, tmp_22_fu_761_p2, "tmp_22_fu_761_p2");
    sc_trace(mVcdFile, tmp_23_fu_391_p2, "tmp_23_fu_391_p2");
    sc_trace(mVcdFile, tmp_24_fu_767_p2, "tmp_24_fu_767_p2");
    sc_trace(mVcdFile, ret_V_5_fu_785_p0, "ret_V_5_fu_785_p0");
    sc_trace(mVcdFile, ret_V_5_fu_785_p1, "ret_V_5_fu_785_p1");
    sc_trace(mVcdFile, grp_fu_790_p1, "grp_fu_790_p1");
    sc_trace(mVcdFile, grp_fu_790_p2, "grp_fu_790_p2");
    sc_trace(mVcdFile, tmp_15_fu_799_p1, "tmp_15_fu_799_p1");
    sc_trace(mVcdFile, tmp_20_cast_fu_803_p1, "tmp_20_cast_fu_803_p1");
    sc_trace(mVcdFile, tmp_18_cast_fu_795_p1, "tmp_18_cast_fu_795_p1");
    sc_trace(mVcdFile, ret_V_5_cast_fu_813_p1, "ret_V_5_cast_fu_813_p1");
    sc_trace(mVcdFile, tmp1_cast_fu_816_p1, "tmp1_cast_fu_816_p1");
    sc_trace(mVcdFile, tmp_13_fu_819_p2, "tmp_13_fu_819_p2");
    sc_trace(mVcdFile, tmp_22_cast_cast_fu_825_p1, "tmp_22_cast_cast_fu_825_p1");
    sc_trace(mVcdFile, feature_out4_sum_fu_829_p2, "feature_out4_sum_fu_829_p2");
    sc_trace(mVcdFile, ret_V_8_fu_844_p0, "ret_V_8_fu_844_p0");
    sc_trace(mVcdFile, ret_V_8_fu_844_p1, "ret_V_8_fu_844_p1");
    sc_trace(mVcdFile, grp_fu_849_p1, "grp_fu_849_p1");
    sc_trace(mVcdFile, grp_fu_849_p2, "grp_fu_849_p2");
    sc_trace(mVcdFile, grp_fu_444_ap_start, "grp_fu_444_ap_start");
    sc_trace(mVcdFile, grp_fu_444_ap_done, "grp_fu_444_ap_done");
    sc_trace(mVcdFile, grp_fu_472_ap_start, "grp_fu_472_ap_start");
    sc_trace(mVcdFile, grp_fu_472_ap_done, "grp_fu_472_ap_done");
    sc_trace(mVcdFile, grp_fu_548_ap_start, "grp_fu_548_ap_start");
    sc_trace(mVcdFile, grp_fu_548_ap_done, "grp_fu_548_ap_done");
    sc_trace(mVcdFile, grp_fu_790_ap_start, "grp_fu_790_ap_start");
    sc_trace(mVcdFile, grp_fu_790_ap_done, "grp_fu_790_ap_done");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_444_p10, "grp_fu_444_p10");
    sc_trace(mVcdFile, grp_fu_472_p10, "grp_fu_472_p10");
    sc_trace(mVcdFile, grp_fu_849_p10, "grp_fu_849_p10");
    sc_trace(mVcdFile, ret_V_2_fu_484_p00, "ret_V_2_fu_484_p00");
    sc_trace(mVcdFile, ret_V_2_fu_484_p10, "ret_V_2_fu_484_p10");
    sc_trace(mVcdFile, ret_V_5_fu_785_p10, "ret_V_5_fu_785_p10");
    sc_trace(mVcdFile, ret_V_8_fu_844_p00, "ret_V_8_fu_844_p00");
    sc_trace(mVcdFile, ret_V_9_fu_632_p00, "ret_V_9_fu_632_p00");
#endif

    }
    mHdltvinHandle.open("pooling.hdltvin.dat");
    mHdltvoutHandle.open("pooling.hdltvout.dat");
}

pooling::~pooling() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete pooling_AXILiteS_s_axi_U;
    delete pooling_gmem_m_axi_U;
    delete pooling_fadd_32nsbkb_U1;
    delete pooling_fdiv_32nscud_U2;
    delete pooling_uitofp_32dEe_U3;
    delete pooling_fcmp_32nseOg_U4;
    delete pooling_sdiv_18s_fYi_U5;
    delete pooling_sdiv_18s_fYi_U6;
    delete pooling_udiv_16nsg8j_U7;
    delete pooling_sdiv_32s_hbi_U8;
    delete pooling_mul_mul_1ibs_U9;
    delete pooling_ama_addmujbC_U10;
}

void pooling::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void pooling::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_logic_0;
}

void pooling::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void pooling::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv32_1;
}

void pooling::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv3_0;
}

void pooling::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv2_0;
}

void pooling::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv4_0;
}

void pooling::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv4_F;
}

void pooling::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv5_2;
}

void pooling::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_gmem_ARREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_gmem_ARREADY.read(), ap_const_logic_1)))) {
            ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, gmem_ARREADY.read())))) {
            ap_reg_ioackin_gmem_ARREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state124.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_gmem_AWREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, gmem_AWREADY.read())) {
                ap_reg_ioackin_gmem_AWREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_gmem_WREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_gmem_WREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_gmem_WREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, gmem_WREADY.read())) {
                ap_reg_ioackin_gmem_WREADY = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_593_p2.read()))) {
        i_op_assign_1_reg_218 = i_reg_1010.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
                esl_seteq<1,1,1>(tmp_2_fu_539_p2.read(), ap_const_lv1_1))) {
        i_op_assign_1_reg_218 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1006.read()))) {
        i_op_assign_2_reg_253 = ap_const_lv16_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state130.read()) && 
                esl_seteq<1,1,1>(gmem_BVALID.read(), ap_const_logic_1))) {
        i_op_assign_2_reg_253 = j_reg_1048.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_593_p2.read()))) {
        i_op_assign_3_reg_298 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_637_p2.read()))) {
        i_op_assign_3_reg_298 = ii_reg_1056.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        i_op_assign_4_reg_321 = jj_reg_1074.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        i_op_assign_4_reg_321 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        i_op_assign_5_reg_343 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read())) {
        i_op_assign_5_reg_343 = s_reg_1098.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_593_p2.read()))) {
        i_op_assign_reg_288 = sum_reg_970.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_637_p2.read()))) {
        i_op_assign_reg_288 = sum_2_reg_309.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_reg_1006.read()))) {
        i_op_assign_s_reg_206 = c_fu_578_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        i_op_assign_s_reg_206 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_593_p2.read()))) {
        phi_mul1_reg_229 = next_mul2_reg_1025.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
                esl_seteq<1,1,1>(tmp_2_fu_539_p2.read(), ap_const_lv1_1))) {
        phi_mul1_reg_229 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1006.read()))) {
        phi_mul8_reg_276 = ap_const_lv16_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state130.read()) && 
                esl_seteq<1,1,1>(gmem_BVALID.read(), ap_const_logic_1))) {
        phi_mul8_reg_276 = next_mul9_reg_1035.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_593_p2.read()))) {
        ret_V_4_reg_241 = next_mul1_reg_1020.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
                esl_seteq<1,1,1>(tmp_2_fu_539_p2.read(), ap_const_lv1_1))) {
        ret_V_4_reg_241 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_reg_1006.read()))) {
        ret_V_6_reg_264 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state130.read()) && 
                esl_seteq<1,1,1>(gmem_BVALID.read(), ap_const_logic_1))) {
        ret_V_6_reg_264 = next_mul_reg_1040.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) && 
         !(esl_seteq<1,1,1>(exitcond4_fu_678_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read())) && 
         esl_seteq<1,1,1>(exitcond4_fu_678_p2.read(), ap_const_lv1_1))) {
        sum_2_be_reg_354 = sum_3_reg_332.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        sum_2_be_reg_354 = sum_4_reg_1090.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        sum_2_reg_309 = sum_2_be_reg_354.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        sum_2_reg_309 = i_op_assign_reg_288.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        sum_3_reg_332 = sum_2_reg_309.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read())) {
        sum_3_reg_332 = sum_6_fu_773_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_604_p2.read()) && 
         esl_seteq<1,1,1>(mode_V_read_reg_858.read(), ap_const_lv1_1))) {
        sum_5_reg_366 = i_op_assign_reg_288.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, mode_V_read_reg_858.read()))) {
        sum_5_reg_366 = grp_fu_383_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        CHin_V_read_reg_887 = CHin_V.read();
        Kx_V_read_reg_876 = Kx_V.read();
        Ky_V_read_reg_870 = Ky_V.read();
        Sc_V_read_reg_863 = Sc_V.read();
        Win_V_read_reg_882 = Win_V.read();
        mode_V_read_reg_858 = mode_V.read();
        tmp_3_reg_893 = feature_out.read().range(31, 2);
        tmp_4_reg_898 = feature_in.read().range(31, 2);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        ci_head_reg_1015 = ci_head_fu_563_p1.read();
        next_mul1_reg_1020 = next_mul1_fu_567_p2.read();
        next_mul2_reg_1025 = next_mul2_fu_573_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        exitcond1_reg_1006 = exitcond1_fu_552_p2.read();
        i_reg_1010 = i_fu_557_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        gmem_addr_1_reg_1084 =  (sc_lv<32>) (feature_in2_sum_cast_fu_668_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state123.read())) {
        gmem_addr_reg_1123 =  (sc_lv<32>) (feature_out4_sum_cas_fu_834_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        ii_reg_1056 = ii_fu_609_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        j_reg_1048 = j_fu_598_p2.read();
        next_mul9_reg_1035 = next_mul9_fu_583_p2.read();
        next_mul_reg_1040 = next_mul_fu_588_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        jj_reg_1074 = jj_fu_642_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        lhs_V_2_reg_928 = lhs_V_2_fu_481_p1.read();
        ret_V_2_reg_933 = ret_V_2_fu_484_p2.read();
        rhs_V_2_reg_923 = rhs_V_2_fu_478_p1.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) && 
  esl_seteq<1,1,1>(gmem_RVALID.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) && 
  esl_seteq<1,1,1>(exitcond4_fu_678_p2.read(), ap_const_lv1_0) && 
  !(esl_seteq<1,1,1>(exitcond4_fu_678_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read()))))) {
        reg_396 = gmem_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_637_p2.read()))) {
        ret_V_11_reg_1079 = ret_V_11_fu_655_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read())) {
        ret_V_5_reg_1113 = ret_V_5_fu_785_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_604_p2.read()))) {
        ret_V_8_reg_1061 = ret_V_8_fu_844_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        ret_V_9_reg_1066 = ret_V_9_fu_632_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        rhs_V_3_reg_963 = rhs_V_3_fu_520_p1.read();
        rhs_V_4_reg_975 = rhs_V_4_fu_530_p1.read();
        sum_reg_970 = sum_fu_523_p3.read();
        tmp_15_cast_reg_943 = tmp_15_cast_fu_494_p1.read();
        tmp_16_cast_reg_948 = tmp_16_cast_fu_497_p1.read();
        tmp_5_reg_958 = tmp_5_fu_514_p2.read();
        tmp_6_reg_981 = tmp_6_fu_533_p1.read();
        tmp_7_reg_986 = tmp_7_fu_536_p1.read();
        tmp_8_reg_993 = grp_fu_388_p1.read();
        tmp_s_reg_953 = tmp_s_fu_504_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && esl_seteq<1,1,1>(tmp_2_fu_539_p2.read(), ap_const_lv1_1))) {
        rhs_V_8_cast_reg_1001 = rhs_V_8_cast_fu_544_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) && !(esl_seteq<1,1,1>(exitcond4_fu_678_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read())))) {
        s_reg_1098 = s_fu_683_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        sum_4_reg_1090 = grp_fu_378_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state122.read())) {
        tmp1_reg_1118 = tmp1_fu_807_p2.read();
    }
}

void pooling::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pooling::thread_ap_CS_fsm_state122() {
    ap_CS_fsm_state122 = ap_CS_fsm.read()[121];
}

void pooling::thread_ap_CS_fsm_state123() {
    ap_CS_fsm_state123 = ap_CS_fsm.read()[122];
}

void pooling::thread_ap_CS_fsm_state124() {
    ap_CS_fsm_state124 = ap_CS_fsm.read()[123];
}

void pooling::thread_ap_CS_fsm_state125() {
    ap_CS_fsm_state125 = ap_CS_fsm.read()[124];
}

void pooling::thread_ap_CS_fsm_state130() {
    ap_CS_fsm_state130 = ap_CS_fsm.read()[129];
}

void pooling::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void pooling::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void pooling::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void pooling::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void pooling::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void pooling::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void pooling::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void pooling::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void pooling::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void pooling::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void pooling::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void pooling::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void pooling::thread_ap_CS_fsm_state56() {
    ap_CS_fsm_state56 = ap_CS_fsm.read()[55];
}

void pooling::thread_ap_CS_fsm_state57() {
    ap_CS_fsm_state57 = ap_CS_fsm.read()[56];
}

void pooling::thread_ap_CS_fsm_state61() {
    ap_CS_fsm_state61 = ap_CS_fsm.read()[60];
}

void pooling::thread_ap_CS_fsm_state62() {
    ap_CS_fsm_state62 = ap_CS_fsm.read()[61];
}

void pooling::thread_ap_CS_fsm_state63() {
    ap_CS_fsm_state63 = ap_CS_fsm.read()[62];
}

void pooling::thread_ap_CS_fsm_state69() {
    ap_CS_fsm_state69 = ap_CS_fsm.read()[68];
}

void pooling::thread_ap_CS_fsm_state70() {
    ap_CS_fsm_state70 = ap_CS_fsm.read()[69];
}

void pooling::thread_ap_CS_fsm_state71() {
    ap_CS_fsm_state71 = ap_CS_fsm.read()[70];
}

void pooling::thread_ap_CS_fsm_state72() {
    ap_CS_fsm_state72 = ap_CS_fsm.read()[71];
}

void pooling::thread_ap_CS_fsm_state87() {
    ap_CS_fsm_state87 = ap_CS_fsm.read()[86];
}

void pooling::thread_ap_block_state70() {
    ap_block_state70 = (esl_seteq<1,1,1>(exitcond4_fu_678_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read()));
}

void pooling::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_539_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pooling::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pooling::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_539_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pooling::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void pooling::thread_ap_sig_ioackin_gmem_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read())) {
        ap_sig_ioackin_gmem_ARREADY = gmem_ARREADY.read();
    } else {
        ap_sig_ioackin_gmem_ARREADY = ap_const_logic_1;
    }
}

void pooling::thread_ap_sig_ioackin_gmem_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_AWREADY.read())) {
        ap_sig_ioackin_gmem_AWREADY = gmem_AWREADY.read();
    } else {
        ap_sig_ioackin_gmem_AWREADY = ap_const_logic_1;
    }
}

void pooling::thread_ap_sig_ioackin_gmem_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_WREADY.read())) {
        ap_sig_ioackin_gmem_WREADY = gmem_WREADY.read();
    } else {
        ap_sig_ioackin_gmem_WREADY = ap_const_logic_1;
    }
}

void pooling::thread_c_fu_578_p2() {
    c_fu_578_p2 = (!tmp_7_reg_986.read().is_01() || !i_op_assign_s_reg_206.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_7_reg_986.read()) + sc_bigint<32>(i_op_assign_s_reg_206.read()));
}

void pooling::thread_ci_head_fu_563_p1() {
    ci_head_fu_563_p1 = esl_zext<32,16>(grp_fu_548_p2.read());
}

void pooling::thread_exitcond1_fu_552_p2() {
    exitcond1_fu_552_p2 = (!i_op_assign_1_reg_218.read().is_01() || !tmp_5_reg_958.read().is_01())? sc_lv<1>(): sc_lv<1>(i_op_assign_1_reg_218.read() == tmp_5_reg_958.read());
}

void pooling::thread_exitcond2_fu_604_p2() {
    exitcond2_fu_604_p2 = (!i_op_assign_3_reg_298.read().is_01() || !Ky_V_read_reg_870.read().is_01())? sc_lv<1>(): sc_lv<1>(i_op_assign_3_reg_298.read() == Ky_V_read_reg_870.read());
}

void pooling::thread_exitcond3_fu_637_p2() {
    exitcond3_fu_637_p2 = (!i_op_assign_4_reg_321.read().is_01() || !Kx_V_read_reg_876.read().is_01())? sc_lv<1>(): sc_lv<1>(i_op_assign_4_reg_321.read() == Kx_V_read_reg_876.read());
}

void pooling::thread_exitcond4_fu_678_p2() {
    exitcond4_fu_678_p2 = (!i_op_assign_5_reg_343.read().is_01() || !Sc_V_read_reg_863.read().is_01())? sc_lv<1>(): sc_lv<1>(i_op_assign_5_reg_343.read() == Sc_V_read_reg_863.read());
}

void pooling::thread_exitcond_fu_593_p2() {
    exitcond_fu_593_p2 = (!i_op_assign_2_reg_253.read().is_01() || !tmp_s_reg_953.read().is_01())? sc_lv<1>(): sc_lv<1>(i_op_assign_2_reg_253.read() == tmp_s_reg_953.read());
}

void pooling::thread_feature_in2_sum_cast_fu_668_p1() {
    feature_in2_sum_cast_fu_668_p1 = esl_sext<64,50>(feature_in2_sum_fu_663_p2.read());
}

void pooling::thread_feature_in2_sum_fu_663_p2() {
    feature_in2_sum_fu_663_p2 = (!tmp_17_cast_fu_660_p1.read().is_01() || !tmp_16_cast_reg_948.read().is_01())? sc_lv<50>(): (sc_bigint<50>(tmp_17_cast_fu_660_p1.read()) + sc_biguint<50>(tmp_16_cast_reg_948.read()));
}

void pooling::thread_feature_in_load_1_to_fu_707_p1() {
    feature_in_load_1_to_fu_707_p1 = reg_396.read();
}

void pooling::thread_feature_out4_sum_cas_fu_834_p1() {
    feature_out4_sum_cas_fu_834_p1 = esl_sext<64,50>(feature_out4_sum_fu_829_p2.read());
}

void pooling::thread_feature_out4_sum_fu_829_p2() {
    feature_out4_sum_fu_829_p2 = (!tmp_15_cast_reg_943.read().is_01() || !tmp_22_cast_cast_fu_825_p1.read().is_01())? sc_lv<50>(): (sc_biguint<50>(tmp_15_cast_reg_943.read()) + sc_bigint<50>(tmp_22_cast_cast_fu_825_p1.read()));
}

void pooling::thread_gmem_ARLEN() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read())) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
            gmem_ARLEN = tmp_7_reg_986.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
            gmem_ARLEN = ap_const_lv32_1;
        } else {
            gmem_ARLEN = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        gmem_ARLEN = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void pooling::thread_gmem_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read())))) {
        gmem_ARVALID = ap_const_logic_1;
    } else {
        gmem_ARVALID = ap_const_logic_0;
    }
}

void pooling::thread_gmem_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state124.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_AWREADY.read()))) {
        gmem_AWVALID = ap_const_logic_1;
    } else {
        gmem_AWVALID = ap_const_logic_0;
    }
}

void pooling::thread_gmem_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state130.read()) && 
         esl_seteq<1,1,1>(gmem_BVALID.read(), ap_const_logic_1))) {
        gmem_BREADY = ap_const_logic_1;
    } else {
        gmem_BREADY = ap_const_logic_0;
    }
}

void pooling::thread_gmem_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) && 
          esl_seteq<1,1,1>(gmem_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) && 
          esl_seteq<1,1,1>(exitcond4_fu_678_p2.read(), ap_const_lv1_0) && 
          !(esl_seteq<1,1,1>(exitcond4_fu_678_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read()))))) {
        gmem_RREADY = ap_const_logic_1;
    } else {
        gmem_RREADY = ap_const_logic_0;
    }
}

void pooling::thread_gmem_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_WREADY.read()))) {
        gmem_WVALID = ap_const_logic_1;
    } else {
        gmem_WVALID = ap_const_logic_0;
    }
}

void pooling::thread_gmem_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()))) {
        gmem_blk_n_AR = m_axi_gmem_ARREADY.read();
    } else {
        gmem_blk_n_AR = ap_const_logic_1;
    }
}

void pooling::thread_gmem_blk_n_AW() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state124.read())) {
        gmem_blk_n_AW = m_axi_gmem_AWREADY.read();
    } else {
        gmem_blk_n_AW = ap_const_logic_1;
    }
}

void pooling::thread_gmem_blk_n_B() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state130.read())) {
        gmem_blk_n_B = m_axi_gmem_BVALID.read();
    } else {
        gmem_blk_n_B = ap_const_logic_1;
    }
}

void pooling::thread_gmem_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) && 
          esl_seteq<1,1,1>(exitcond4_fu_678_p2.read(), ap_const_lv1_0)))) {
        gmem_blk_n_R = m_axi_gmem_RVALID.read();
    } else {
        gmem_blk_n_R = ap_const_logic_1;
    }
}

void pooling::thread_gmem_blk_n_W() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read())) {
        gmem_blk_n_W = m_axi_gmem_WREADY.read();
    } else {
        gmem_blk_n_W = ap_const_logic_1;
    }
}

void pooling::thread_grp_fu_388_p0() {
    grp_fu_388_p0 = esl_zext<32,16>(ret_V_2_reg_933.read());
}

void pooling::thread_grp_fu_444_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        grp_fu_444_ap_start = ap_const_logic_1;
    } else {
        grp_fu_444_ap_start = ap_const_logic_0;
    }
}

void pooling::thread_grp_fu_444_p0() {
    grp_fu_444_p0 = esl_sext<18,17>(ret_V_fu_430_p2.read());
}

void pooling::thread_grp_fu_444_p1() {
    grp_fu_444_p1 =  (sc_lv<9>) (grp_fu_444_p10.read());
}

void pooling::thread_grp_fu_444_p10() {
    grp_fu_444_p10 = esl_zext<18,8>(Sy_V.read());
}

void pooling::thread_grp_fu_472_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        grp_fu_472_ap_start = ap_const_logic_1;
    } else {
        grp_fu_472_ap_start = ap_const_logic_0;
    }
}

void pooling::thread_grp_fu_472_p0() {
    grp_fu_472_p0 = esl_sext<18,17>(ret_V_1_fu_458_p2.read());
}

void pooling::thread_grp_fu_472_p1() {
    grp_fu_472_p1 =  (sc_lv<9>) (grp_fu_472_p10.read());
}

void pooling::thread_grp_fu_472_p10() {
    grp_fu_472_p10 = esl_zext<18,8>(Sx_V.read());
}

void pooling::thread_grp_fu_548_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        grp_fu_548_ap_start = ap_const_logic_1;
    } else {
        grp_fu_548_ap_start = ap_const_logic_0;
    }
}

void pooling::thread_grp_fu_548_p1() {
    grp_fu_548_p1 =  (sc_lv<8>) (tmp_6_reg_981.read());
}

void pooling::thread_grp_fu_790_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read())) {
        grp_fu_790_ap_start = ap_const_logic_1;
    } else {
        grp_fu_790_ap_start = ap_const_logic_0;
    }
}

void pooling::thread_grp_fu_790_p1() {
    grp_fu_790_p1 =  (sc_lv<9>) (tmp_7_reg_986.read());
}

void pooling::thread_grp_fu_849_p1() {
    grp_fu_849_p1 =  (sc_lv<8>) (grp_fu_849_p10.read());
}

void pooling::thread_grp_fu_849_p10() {
    grp_fu_849_p10 = esl_zext<16,8>(i_op_assign_4_reg_321.read());
}

void pooling::thread_grp_fu_849_p2() {
    grp_fu_849_p2 =  (sc_lv<16>) (rhs_V_3_reg_963.read());
}

void pooling::thread_h_V_fu_619_p2() {
    h_V_fu_619_p2 = (!tmp_11_fu_615_p1.read().is_01() || !phi_mul1_reg_229.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp_11_fu_615_p1.read()) + sc_biguint<16>(phi_mul1_reg_229.read()));
}

void pooling::thread_i_fu_557_p2() {
    i_fu_557_p2 = (!i_op_assign_1_reg_218.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(i_op_assign_1_reg_218.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void pooling::thread_ii_fu_609_p2() {
    ii_fu_609_p2 = (!i_op_assign_3_reg_298.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_op_assign_3_reg_298.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void pooling::thread_j_fu_598_p2() {
    j_fu_598_p2 = (!i_op_assign_2_reg_253.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(i_op_assign_2_reg_253.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void pooling::thread_jj_fu_642_p2() {
    jj_fu_642_p2 = (!i_op_assign_4_reg_321.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_op_assign_4_reg_321.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void pooling::thread_lhs_V_1_fu_450_p1() {
    lhs_V_1_fu_450_p1 = esl_zext<17,16>(Win_V.read());
}

void pooling::thread_lhs_V_2_fu_481_p1() {
    lhs_V_2_fu_481_p1 = esl_zext<16,8>(Kx_V_read_reg_876.read());
}

void pooling::thread_lhs_V_fu_422_p1() {
    lhs_V_fu_422_p1 = esl_zext<17,16>(Hin_V.read());
}

void pooling::thread_next_mul1_fu_567_p2() {
    next_mul1_fu_567_p2 = (!ret_V_4_reg_241.read().is_01() || !ci_head_fu_563_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ret_V_4_reg_241.read()) + sc_biguint<32>(ci_head_fu_563_p1.read()));
}

void pooling::thread_next_mul2_fu_573_p2() {
    next_mul2_fu_573_p2 = (!phi_mul1_reg_229.read().is_01() || !rhs_V_2_reg_923.read().is_01())? sc_lv<16>(): (sc_biguint<16>(phi_mul1_reg_229.read()) + sc_biguint<16>(rhs_V_2_reg_923.read()));
}

void pooling::thread_next_mul9_fu_583_p2() {
    next_mul9_fu_583_p2 = (!phi_mul8_reg_276.read().is_01() || !lhs_V_2_reg_928.read().is_01())? sc_lv<16>(): (sc_biguint<16>(phi_mul8_reg_276.read()) + sc_biguint<16>(lhs_V_2_reg_928.read()));
}

void pooling::thread_next_mul_fu_588_p2() {
    next_mul_fu_588_p2 = (!ret_V_6_reg_264.read().is_01() || !ci_head_reg_1015.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ret_V_6_reg_264.read()) + sc_biguint<32>(ci_head_reg_1015.read()));
}

void pooling::thread_notlhs8_fu_743_p2() {
    notlhs8_fu_743_p2 = (!tmp_18_fu_711_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_18_fu_711_p4.read() != ap_const_lv8_FF);
}

void pooling::thread_notlhs_fu_725_p2() {
    notlhs_fu_725_p2 = (!tmp_16_fu_693_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_16_fu_693_p4.read() != ap_const_lv8_FF);
}

void pooling::thread_notrhs9_fu_749_p2() {
    notrhs9_fu_749_p2 = (!tmp_19_fu_721_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_19_fu_721_p1.read() == ap_const_lv23_0);
}

void pooling::thread_notrhs_fu_731_p2() {
    notrhs_fu_731_p2 = (!tmp_17_fu_703_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_17_fu_703_p1.read() == ap_const_lv23_0);
}

void pooling::thread_ret_V_10_cast_fu_652_p1() {
    ret_V_10_cast_fu_652_p1 = esl_zext<49,48>(grp_fu_849_p4.read());
}

void pooling::thread_ret_V_11_fu_655_p2() {
    ret_V_11_fu_655_p2 = (!rhs_V_8_cast_reg_1001.read().is_01() || !ret_V_10_cast_fu_652_p1.read().is_01())? sc_lv<49>(): (sc_bigint<49>(rhs_V_8_cast_reg_1001.read()) + sc_biguint<49>(ret_V_10_cast_fu_652_p1.read()));
}

void pooling::thread_ret_V_1_fu_458_p2() {
    ret_V_1_fu_458_p2 = (!lhs_V_1_fu_450_p1.read().is_01() || !rhs_V_1_fu_454_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(lhs_V_1_fu_450_p1.read()) - sc_biguint<17>(rhs_V_1_fu_454_p1.read()));
}

void pooling::thread_ret_V_2_fu_484_p0() {
    ret_V_2_fu_484_p0 =  (sc_lv<8>) (ret_V_2_fu_484_p00.read());
}

void pooling::thread_ret_V_2_fu_484_p00() {
    ret_V_2_fu_484_p00 = esl_zext<16,8>(Kx_V_read_reg_876.read());
}

void pooling::thread_ret_V_2_fu_484_p1() {
    ret_V_2_fu_484_p1 =  (sc_lv<8>) (ret_V_2_fu_484_p10.read());
}

void pooling::thread_ret_V_2_fu_484_p10() {
    ret_V_2_fu_484_p10 = esl_zext<16,8>(Ky_V_read_reg_870.read());
}

void pooling::thread_ret_V_2_fu_484_p2() {
    ret_V_2_fu_484_p2 = (!ret_V_2_fu_484_p0.read().is_01() || !ret_V_2_fu_484_p1.read().is_01())? sc_lv<16>(): sc_biguint<8>(ret_V_2_fu_484_p0.read()) * sc_biguint<8>(ret_V_2_fu_484_p1.read());
}

void pooling::thread_ret_V_5_cast_fu_813_p1() {
    ret_V_5_cast_fu_813_p1 = esl_zext<49,48>(ret_V_5_reg_1113.read());
}

void pooling::thread_ret_V_5_fu_785_p0() {
    ret_V_5_fu_785_p0 =  (sc_lv<16>) (rhs_V_4_reg_975.read());
}

void pooling::thread_ret_V_5_fu_785_p1() {
    ret_V_5_fu_785_p1 =  (sc_lv<32>) (ret_V_5_fu_785_p10.read());
}

void pooling::thread_ret_V_5_fu_785_p10() {
    ret_V_5_fu_785_p10 = esl_zext<48,32>(ret_V_4_reg_241.read());
}

void pooling::thread_ret_V_5_fu_785_p2() {
    ret_V_5_fu_785_p2 = (!ret_V_5_fu_785_p0.read().is_01() || !ret_V_5_fu_785_p1.read().is_01())? sc_lv<48>(): sc_biguint<16>(ret_V_5_fu_785_p0.read()) * sc_biguint<32>(ret_V_5_fu_785_p1.read());
}

void pooling::thread_ret_V_8_fu_844_p0() {
    ret_V_8_fu_844_p0 =  (sc_lv<16>) (ret_V_8_fu_844_p00.read());
}

void pooling::thread_ret_V_8_fu_844_p00() {
    ret_V_8_fu_844_p00 = esl_zext<32,16>(h_V_fu_619_p2.read());
}

void pooling::thread_ret_V_8_fu_844_p1() {
    ret_V_8_fu_844_p1 =  (sc_lv<16>) (rhs_V_3_reg_963.read());
}

void pooling::thread_ret_V_9_fu_632_p0() {
    ret_V_9_fu_632_p0 =  (sc_lv<32>) (ret_V_9_fu_632_p00.read());
}

void pooling::thread_ret_V_9_fu_632_p00() {
    ret_V_9_fu_632_p00 = esl_zext<48,32>(ret_V_8_reg_1061.read());
}

void pooling::thread_ret_V_9_fu_632_p1() {
    ret_V_9_fu_632_p1 =  (sc_lv<16>) (rhs_V_4_reg_975.read());
}

void pooling::thread_ret_V_9_fu_632_p2() {
    ret_V_9_fu_632_p2 = (!ret_V_9_fu_632_p0.read().is_01() || !ret_V_9_fu_632_p1.read().is_01())? sc_lv<48>(): sc_biguint<32>(ret_V_9_fu_632_p0.read()) * sc_biguint<16>(ret_V_9_fu_632_p1.read());
}

void pooling::thread_ret_V_fu_430_p2() {
    ret_V_fu_430_p2 = (!lhs_V_fu_422_p1.read().is_01() || !rhs_V_fu_426_p1.read().is_01())? sc_lv<17>(): (sc_biguint<17>(lhs_V_fu_422_p1.read()) - sc_biguint<17>(rhs_V_fu_426_p1.read()));
}

void pooling::thread_rhs_V_1_fu_454_p1() {
    rhs_V_1_fu_454_p1 = esl_zext<17,8>(Kx_V.read());
}

void pooling::thread_rhs_V_2_fu_478_p1() {
    rhs_V_2_fu_478_p1 = esl_zext<16,8>(Ky_V_read_reg_870.read());
}

void pooling::thread_rhs_V_3_fu_520_p1() {
    rhs_V_3_fu_520_p1 = esl_zext<32,16>(CHin_V_read_reg_887.read());
}

void pooling::thread_rhs_V_4_fu_530_p1() {
    rhs_V_4_fu_530_p1 = esl_zext<48,16>(Win_V_read_reg_882.read());
}

void pooling::thread_rhs_V_8_cast_fu_544_p1() {
    rhs_V_8_cast_fu_544_p1 = esl_sext<49,32>(i_op_assign_s_reg_206.read());
}

void pooling::thread_rhs_V_fu_426_p1() {
    rhs_V_fu_426_p1 = esl_zext<17,8>(Ky_V.read());
}

void pooling::thread_s_fu_683_p2() {
    s_fu_683_p2 = (!i_op_assign_5_reg_343.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_op_assign_5_reg_343.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void pooling::thread_sum_3_to_int_fu_689_p1() {
    sum_3_to_int_fu_689_p1 = sum_3_reg_332.read();
}

void pooling::thread_sum_6_fu_773_p3() {
    sum_6_fu_773_p3 = (!tmp_24_fu_767_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_24_fu_767_p2.read()[0].to_bool())? sum_3_reg_332.read(): reg_396.read());
}

void pooling::thread_sum_fu_523_p3() {
    sum_fu_523_p3 = (!mode_V_read_reg_858.read()[0].is_01())? sc_lv<32>(): ((mode_V_read_reg_858.read()[0].to_bool())? ap_const_lv32_D51184E7: ap_const_lv32_0);
}

void pooling::thread_tmp1_cast_fu_816_p1() {
    tmp1_cast_fu_816_p1 = esl_sext<49,33>(tmp1_reg_1118.read());
}

void pooling::thread_tmp1_fu_807_p2() {
    tmp1_fu_807_p2 = (!tmp_20_cast_fu_803_p1.read().is_01() || !tmp_18_cast_fu_795_p1.read().is_01())? sc_lv<33>(): (sc_bigint<33>(tmp_20_cast_fu_803_p1.read()) + sc_biguint<33>(tmp_18_cast_fu_795_p1.read()));
}

void pooling::thread_tmp_10_fu_510_p1() {
    tmp_10_fu_510_p1 = grp_fu_444_p2.read().range(16-1, 0);
}

void pooling::thread_tmp_11_fu_615_p1() {
    tmp_11_fu_615_p1 = esl_zext<16,8>(i_op_assign_3_reg_298.read());
}

void pooling::thread_tmp_13_fu_819_p2() {
    tmp_13_fu_819_p2 = (!ret_V_5_cast_fu_813_p1.read().is_01() || !tmp1_cast_fu_816_p1.read().is_01())? sc_lv<49>(): (sc_biguint<49>(ret_V_5_cast_fu_813_p1.read()) + sc_bigint<49>(tmp1_cast_fu_816_p1.read()));
}

void pooling::thread_tmp_15_cast_fu_494_p1() {
    tmp_15_cast_fu_494_p1 = esl_zext<50,30>(tmp_3_reg_893.read());
}

void pooling::thread_tmp_15_fu_799_p1() {
    tmp_15_fu_799_p1 = grp_fu_790_p2.read().range(9-1, 0);
}

void pooling::thread_tmp_16_cast_fu_497_p1() {
    tmp_16_cast_fu_497_p1 = esl_zext<50,30>(tmp_4_reg_898.read());
}

void pooling::thread_tmp_16_fu_693_p4() {
    tmp_16_fu_693_p4 = sum_3_to_int_fu_689_p1.read().range(30, 23);
}

void pooling::thread_tmp_17_cast_fu_660_p1() {
    tmp_17_cast_fu_660_p1 = esl_sext<50,49>(ret_V_11_reg_1079.read());
}

void pooling::thread_tmp_17_fu_703_p1() {
    tmp_17_fu_703_p1 = sum_3_to_int_fu_689_p1.read().range(23-1, 0);
}

void pooling::thread_tmp_18_cast_fu_795_p1() {
    tmp_18_cast_fu_795_p1 = esl_zext<33,32>(ret_V_6_reg_264.read());
}

void pooling::thread_tmp_18_fu_711_p4() {
    tmp_18_fu_711_p4 = feature_in_load_1_to_fu_707_p1.read().range(30, 23);
}

void pooling::thread_tmp_19_fu_721_p1() {
    tmp_19_fu_721_p1 = feature_in_load_1_to_fu_707_p1.read().range(23-1, 0);
}

void pooling::thread_tmp_20_cast_fu_803_p1() {
    tmp_20_cast_fu_803_p1 = esl_sext<33,9>(tmp_15_fu_799_p1.read());
}

void pooling::thread_tmp_20_fu_737_p2() {
    tmp_20_fu_737_p2 = (notrhs_fu_731_p2.read() | notlhs_fu_725_p2.read());
}

void pooling::thread_tmp_21_fu_755_p2() {
    tmp_21_fu_755_p2 = (notrhs9_fu_749_p2.read() | notlhs8_fu_743_p2.read());
}

void pooling::thread_tmp_22_cast_cast_fu_825_p1() {
    tmp_22_cast_cast_fu_825_p1 = esl_sext<50,49>(tmp_13_fu_819_p2.read());
}

void pooling::thread_tmp_22_fu_761_p2() {
    tmp_22_fu_761_p2 = (tmp_20_fu_737_p2.read() & tmp_21_fu_755_p2.read());
}

void pooling::thread_tmp_24_fu_767_p2() {
    tmp_24_fu_767_p2 = (tmp_22_fu_761_p2.read() & tmp_23_fu_391_p2.read());
}

void pooling::thread_tmp_2_fu_539_p2() {
    tmp_2_fu_539_p2 = (!i_op_assign_s_reg_206.read().is_01() || !rhs_V_3_reg_963.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_op_assign_s_reg_206.read()) < sc_bigint<32>(rhs_V_3_reg_963.read()));
}

void pooling::thread_tmp_5_fu_514_p2() {
    tmp_5_fu_514_p2 = (!ap_const_lv16_1.is_01() || !tmp_10_fu_510_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(tmp_10_fu_510_p1.read()));
}

void pooling::thread_tmp_6_fu_533_p1() {
    tmp_6_fu_533_p1 = esl_zext<16,8>(Sc_V_read_reg_863.read());
}

void pooling::thread_tmp_7_fu_536_p1() {
    tmp_7_fu_536_p1 = esl_zext<32,8>(Sc_V_read_reg_863.read());
}

void pooling::thread_tmp_9_fu_500_p1() {
    tmp_9_fu_500_p1 = grp_fu_472_p2.read().range(16-1, 0);
}

void pooling::thread_tmp_s_fu_504_p2() {
    tmp_s_fu_504_p2 = (!ap_const_lv16_1.is_01() || !tmp_9_fu_500_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(tmp_9_fu_500_p1.read()));
}

void pooling::thread_ap_NS_fsm() {
    if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        ap_NS_fsm = ap_ST_fsm_state3;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        ap_NS_fsm = ap_ST_fsm_state4;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_state9;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_539_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state1;
        } else {
            ap_NS_fsm = ap_ST_fsm_state24;
        }
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_reg_1006.read()))) {
            ap_NS_fsm = ap_ST_fsm_state23;
        } else {
            ap_NS_fsm = ap_ST_fsm_state44;
        }
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_593_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state24;
        } else {
            ap_NS_fsm = ap_ST_fsm_state45;
        }
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_604_p2.read()) && esl_seteq<1,1,1>(mode_V_read_reg_858.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state87;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, mode_V_read_reg_858.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_604_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state73;
        } else {
            ap_NS_fsm = ap_ST_fsm_state46;
        }
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_637_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state45;
        } else {
            ap_NS_fsm = ap_ST_fsm_state48;
        }
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && esl_seteq<1,1,1>(mode_V_read_reg_858.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state63;
        } else {
            ap_NS_fsm = ap_ST_fsm_state49;
        }
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_gmem_ARREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state50;
        } else {
            ap_NS_fsm = ap_ST_fsm_state49;
        }
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) && esl_seteq<1,1,1>(gmem_RVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state57;
        } else {
            ap_NS_fsm = ap_ST_fsm_state56;
        }
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state72;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_gmem_ARREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state64;
        } else {
            ap_NS_fsm = ap_ST_fsm_state63;
        }
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) && !(esl_seteq<1,1,1>(exitcond4_fu_678_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read())) && esl_seteq<1,1,1>(exitcond4_fu_678_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state72;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) && esl_seteq<1,1,1>(exitcond4_fu_678_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(exitcond4_fu_678_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, gmem_RVALID.read())))) {
            ap_NS_fsm = ap_ST_fsm_state71;
        } else {
            ap_NS_fsm = ap_ST_fsm_state70;
        }
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        ap_NS_fsm = ap_ST_fsm_state74;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        ap_NS_fsm = ap_ST_fsm_state75;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state75))
    {
        ap_NS_fsm = ap_ST_fsm_state76;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state76))
    {
        ap_NS_fsm = ap_ST_fsm_state77;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state77))
    {
        ap_NS_fsm = ap_ST_fsm_state78;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state78))
    {
        ap_NS_fsm = ap_ST_fsm_state79;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state79))
    {
        ap_NS_fsm = ap_ST_fsm_state80;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state80))
    {
        ap_NS_fsm = ap_ST_fsm_state81;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state81))
    {
        ap_NS_fsm = ap_ST_fsm_state82;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state82))
    {
        ap_NS_fsm = ap_ST_fsm_state83;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state83))
    {
        ap_NS_fsm = ap_ST_fsm_state84;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state84))
    {
        ap_NS_fsm = ap_ST_fsm_state85;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state85))
    {
        ap_NS_fsm = ap_ST_fsm_state86;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state86))
    {
        ap_NS_fsm = ap_ST_fsm_state87;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state87))
    {
        ap_NS_fsm = ap_ST_fsm_state88;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state88))
    {
        ap_NS_fsm = ap_ST_fsm_state89;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state89))
    {
        ap_NS_fsm = ap_ST_fsm_state90;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state90))
    {
        ap_NS_fsm = ap_ST_fsm_state91;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state91))
    {
        ap_NS_fsm = ap_ST_fsm_state92;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state92))
    {
        ap_NS_fsm = ap_ST_fsm_state93;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state93))
    {
        ap_NS_fsm = ap_ST_fsm_state94;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state94))
    {
        ap_NS_fsm = ap_ST_fsm_state95;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state95))
    {
        ap_NS_fsm = ap_ST_fsm_state96;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state96))
    {
        ap_NS_fsm = ap_ST_fsm_state97;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state97))
    {
        ap_NS_fsm = ap_ST_fsm_state98;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state98))
    {
        ap_NS_fsm = ap_ST_fsm_state99;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state99))
    {
        ap_NS_fsm = ap_ST_fsm_state100;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state100))
    {
        ap_NS_fsm = ap_ST_fsm_state101;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state101))
    {
        ap_NS_fsm = ap_ST_fsm_state102;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state102))
    {
        ap_NS_fsm = ap_ST_fsm_state103;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state103))
    {
        ap_NS_fsm = ap_ST_fsm_state104;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state104))
    {
        ap_NS_fsm = ap_ST_fsm_state105;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state105))
    {
        ap_NS_fsm = ap_ST_fsm_state106;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state106))
    {
        ap_NS_fsm = ap_ST_fsm_state107;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state107))
    {
        ap_NS_fsm = ap_ST_fsm_state108;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state108))
    {
        ap_NS_fsm = ap_ST_fsm_state109;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state109))
    {
        ap_NS_fsm = ap_ST_fsm_state110;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state110))
    {
        ap_NS_fsm = ap_ST_fsm_state111;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state111))
    {
        ap_NS_fsm = ap_ST_fsm_state112;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state112))
    {
        ap_NS_fsm = ap_ST_fsm_state113;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state113))
    {
        ap_NS_fsm = ap_ST_fsm_state114;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state114))
    {
        ap_NS_fsm = ap_ST_fsm_state115;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state115))
    {
        ap_NS_fsm = ap_ST_fsm_state116;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state116))
    {
        ap_NS_fsm = ap_ST_fsm_state117;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state117))
    {
        ap_NS_fsm = ap_ST_fsm_state118;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state118))
    {
        ap_NS_fsm = ap_ST_fsm_state119;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state119))
    {
        ap_NS_fsm = ap_ST_fsm_state120;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state120))
    {
        ap_NS_fsm = ap_ST_fsm_state121;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state121))
    {
        ap_NS_fsm = ap_ST_fsm_state122;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state122))
    {
        ap_NS_fsm = ap_ST_fsm_state123;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state123))
    {
        ap_NS_fsm = ap_ST_fsm_state124;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state124))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state124.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_gmem_AWREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state125;
        } else {
            ap_NS_fsm = ap_ST_fsm_state124;
        }
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state125))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_gmem_WREADY.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state126;
        } else {
            ap_NS_fsm = ap_ST_fsm_state125;
        }
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state126))
    {
        ap_NS_fsm = ap_ST_fsm_state127;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state127))
    {
        ap_NS_fsm = ap_ST_fsm_state128;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state128))
    {
        ap_NS_fsm = ap_ST_fsm_state129;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state129))
    {
        ap_NS_fsm = ap_ST_fsm_state130;
    }
    else if (esl_seteq<1,130,130>(ap_CS_fsm.read(), ap_ST_fsm_state130))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state130.read()) && esl_seteq<1,1,1>(gmem_BVALID.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state44;
        } else {
            ap_NS_fsm = ap_ST_fsm_state130;
        }
    }
    else
    {
        ap_NS_fsm =  (sc_lv<130>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
void pooling::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_gmem_AWVALID\" :  \"" << m_axi_gmem_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_AWREADY\" :  \"" << m_axi_gmem_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWADDR\" :  \"" << m_axi_gmem_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWID\" :  \"" << m_axi_gmem_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWLEN\" :  \"" << m_axi_gmem_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWSIZE\" :  \"" << m_axi_gmem_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWBURST\" :  \"" << m_axi_gmem_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWLOCK\" :  \"" << m_axi_gmem_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWCACHE\" :  \"" << m_axi_gmem_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWPROT\" :  \"" << m_axi_gmem_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWQOS\" :  \"" << m_axi_gmem_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWREGION\" :  \"" << m_axi_gmem_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWUSER\" :  \"" << m_axi_gmem_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WVALID\" :  \"" << m_axi_gmem_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_WREADY\" :  \"" << m_axi_gmem_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WDATA\" :  \"" << m_axi_gmem_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WSTRB\" :  \"" << m_axi_gmem_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WLAST\" :  \"" << m_axi_gmem_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WID\" :  \"" << m_axi_gmem_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WUSER\" :  \"" << m_axi_gmem_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARVALID\" :  \"" << m_axi_gmem_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_ARREADY\" :  \"" << m_axi_gmem_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARADDR\" :  \"" << m_axi_gmem_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARID\" :  \"" << m_axi_gmem_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARLEN\" :  \"" << m_axi_gmem_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARSIZE\" :  \"" << m_axi_gmem_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARBURST\" :  \"" << m_axi_gmem_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARLOCK\" :  \"" << m_axi_gmem_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARCACHE\" :  \"" << m_axi_gmem_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARPROT\" :  \"" << m_axi_gmem_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARQOS\" :  \"" << m_axi_gmem_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARREGION\" :  \"" << m_axi_gmem_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARUSER\" :  \"" << m_axi_gmem_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RVALID\" :  \"" << m_axi_gmem_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_RREADY\" :  \"" << m_axi_gmem_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RDATA\" :  \"" << m_axi_gmem_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RLAST\" :  \"" << m_axi_gmem_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RID\" :  \"" << m_axi_gmem_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RUSER\" :  \"" << m_axi_gmem_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RRESP\" :  \"" << m_axi_gmem_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BVALID\" :  \"" << m_axi_gmem_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_BREADY\" :  \"" << m_axi_gmem_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BRESP\" :  \"" << m_axi_gmem_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BID\" :  \"" << m_axi_gmem_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BUSER\" :  \"" << m_axi_gmem_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

